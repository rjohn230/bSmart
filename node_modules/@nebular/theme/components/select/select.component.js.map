{"version":3,"file":"select.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/select/select.component.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { take, takeWhile } from 'rxjs/operators';\nimport { defer, merge, Observable } from 'rxjs';\n\nimport {\n  NbAdjustableConnectedPositionStrategy,\n  NbAdjustment,\n  NbOverlayRef,\n  NbOverlayService,\n  NbPortalDirective,\n  NbPosition,\n  NbPositionBuilderService, NbScrollStrategy,\n  NbTrigger,\n  NbTriggerStrategy,\n  NbTriggerStrategyBuilder,\n} from '../cdk';\nimport { NbOptionComponent } from './option.component';\nimport { NB_DOCUMENT } from '../../theme.options';\nimport { convertToBoolProperty } from '../helpers';\n\n\n@Component({\n  selector: 'nb-select-label',\n  template: '<ng-content></ng-content>',\n})\nexport class NbSelectLabelComponent {\n}\n\n/**\n * The `NbSelectComponent` provides a capability to select one of the passed items.\n *\n * @stacked-example(Showcase, select/select-showcase.component)\n *\n * ### Installation\n *\n * Import `NbSelectModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbSelectModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * If you want to use it as the multi-select control you have to mark it as `multiple`.\n * In this case, `nb-select` will work only with arrays - accept arrays and propagate arrays.\n *\n * @stacked-example(Multiple, select/select-multiple.component)\n *\n * Items without values will clean selection.\n *\n * @stacked-example(Clean selection, select/select-clean.component)\n *\n * Select may be bounded using `selected` input:\n *\n * ```html\n * <nb-select [(selected)]=\"selected\"></nb-selected>\n * ```\n *\n * Or you can bind control with form controls or ngModel:\n *\n * @stacked-example(Select form binding, select/select-form.component)\n *\n * Options in the select may be grouped using `nb-option-group` component.\n *\n * @stacked-example(Grouping, select/select-groups.component)\n *\n * Select may have a placeholder that will be shown when nothing selected:\n *\n * @stacked-example(Placeholder, select/select-placeholder.component)\n *\n * You can disable select, options and whole groups.\n *\n * @stacked-example(Disabled select, select/select-disabled.component)\n *\n * Also, the custom label may be provided in select.\n * This custom label will be used for instead placeholder when something selected.\n *\n * @stacked-example(Custom label, select/select-label.component)\n *\n * Default `nb-select` size is `medium` and status color is `primary`.\n * Select is available in multiple colors using `status` property:\n *\n * @stacked-example(Select statuses, select/select-status.component)\n *\n * There are three select sizes:\n *\n * @stacked-example(Select sizes, select/select-sizes.component)\n *\n * And two additional style types - `outline`:\n *\n * @stacked-example(Outline select, select/select-outline.component)\n *\n * and `hero`:\n *\n * @stacked-example(Select colors, select/select-hero.component)\n *\n * Select is available in different shapes, that could be combined with the other properties:\n *\n * @stacked-example(Select shapes, select/select-shapes.component)\n *\n *\n * @styles\n *\n * select-border-width:\n * select-max-height:\n * select-bg:\n * select-checkbox-color:\n * select-checkmark-color:\n * select-option-disabled-bg:\n * select-option-disabled-opacity:\n * select-option-padding:\n * */\n@Component({\n  selector: 'nb-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbSelectComponent),\n      multi: true,\n    },\n  ],\n})\nexport class NbSelectComponent<T> implements OnInit, AfterViewInit, AfterContentInit, OnDestroy, ControlValueAccessor {\n  /**\n   * Select size, available sizes:\n   * `xxsmall`, `xsmall`, `small`, `medium`, `large`\n   */\n  @Input() size: string;\n\n  /**\n   * Select status (adds specific styles):\n   * `primary`, `info`, `success`, `warning`, `danger`\n   */\n  @Input() status: string = 'primary';\n\n  /**\n   * Select shapes: `rectangle`, `round`, `semi-round`\n   */\n  @Input() shape: string;\n\n  /**\n   * Adds `hero` styles\n   */\n  @Input() hero: boolean;\n\n  /**\n   * Disables the select\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If set element will fill its container\n   */\n  @Input() fullWidth: boolean;\n\n  /**\n   * Adds `outline` styles\n   */\n  @Input() outline: boolean;\n\n  /**\n   * Renders select placeholder if nothing selected.\n   * */\n  @Input() placeholder: string = '';\n\n  /**\n   * Will be emitted when selected value changes.\n   * */\n  @Output() selectedChange: EventEmitter<T | T[]> = new EventEmitter();\n\n  /**\n   * Accepts selected item or array of selected items.\n   * */\n  @Input('selected')\n  set setSelected(value: T | T[]) {\n    this.writeValue(value);\n  }\n\n  /**\n   * Gives capability just write `multiple` over the element.\n   * */\n  @Input('multiple')\n  set setMultiple(multiple: boolean) {\n    this.multiple = convertToBoolProperty(multiple);\n  }\n\n  /**\n   * List of `NbOptionComponent`'s components passed as content.\n   * TODO maybe it would be better provide wrapper\n   * */\n  @ContentChildren(NbOptionComponent, { descendants: true }) options: QueryList<NbOptionComponent<T>>;\n\n  /**\n   * Custom select label, will be rendered instead of default enumeration with coma.\n   * */\n  @ContentChild(NbSelectLabelComponent) customLabel;\n\n  /**\n   * NbCard with options content.\n   * */\n  @ViewChild(NbPortalDirective) portal: NbPortalDirective;\n\n  multiple: boolean = false;\n\n  /**\n   * List of selected options.\n   * */\n  selectionModel: NbOptionComponent<T>[] = [];\n\n  positionStrategy: NbAdjustableConnectedPositionStrategy;\n\n  /**\n   * Current overlay position because of we have to toggle overlayPosition\n   * in [ngClass] direction and this directive can use only string.\n   */\n  overlayPosition: NbPosition = '' as NbPosition;\n\n  /**\n   * Stream of events that will fire when one of the options fire selectionChange event.\n   * */\n  selectionChange: Observable<NbOptionComponent<T>> = defer(() => {\n    return merge(...this.options.map(it => it.selectionChange));\n  });\n\n  protected ref: NbOverlayRef;\n\n  protected alive: boolean = true;\n\n  /**\n   * If a user assigns value before content nb-options's rendered the value will be putted in this variable.\n   * And then applied after content rendered.\n   * Only the last value will be applied.\n   * */\n  protected queue: T | T[];\n\n  /**\n   * Function passed through control value accessor to propagate changes.\n   * */\n  protected onChange: Function = () => {};\n\n  constructor(@Inject(NB_DOCUMENT) protected document,\n              protected overlay: NbOverlayService,\n              protected hostRef: ElementRef,\n              protected positionBuilder: NbPositionBuilderService,\n              protected cd: ChangeDetectorRef) {\n  }\n\n  /**\n   * Determines is select opened.\n   * */\n  get isOpened(): boolean {\n    return this.ref && this.ref.hasAttached();\n  }\n\n  /**\n   * Determines is select hidden.\n   * */\n  get isHidden(): boolean {\n    return !this.isOpened;\n  }\n\n  /**\n   * Returns width of the select button.\n   * */\n  get hostWidth(): number {\n    return this.hostRef.nativeElement.getBoundingClientRect().width;\n  }\n\n  /**\n   * Content rendered in the label.\n   * */\n  get selectionView() {\n    if (this.selectionModel.length > 1) {\n      return this.selectionModel.map((option: NbOptionComponent<T>) => option.content).join(', ');\n    }\n\n    return this.selectionModel[0].content;\n  }\n\n  ngOnInit() {\n    this.createOverlay();\n  }\n\n  ngAfterViewInit() {\n    this.subscribeOnTriggers();\n    this.subscribeOnPositionChange();\n    this.subscribeOnSelectionChange();\n  }\n\n  ngAfterContentInit() {\n    if (this.queue) {\n      this.writeValue(this.queue);\n    }\n  }\n\n  ngOnDestroy() {\n    this.ref.dispose();\n  }\n\n  show() {\n    if (this.isHidden) {\n      this.ref.attach(this.portal);\n      this.cd.markForCheck();\n    }\n  }\n\n  hide() {\n    if (this.isOpened) {\n      this.ref.detach();\n      this.cd.markForCheck();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n  }\n\n  writeValue(value: T | T[]): void {\n    if (!value) {\n      return;\n    }\n\n    if (this.options) {\n      this.setSelection(value);\n    } else {\n      this.queue = value;\n    }\n  }\n\n  /**\n   * Selects option or clear all selected options if value is null.\n   * */\n  protected handleSelect(option: NbOptionComponent<T>) {\n    if (option.value) {\n      this.selectOption(option);\n    } else {\n      this.reset();\n    }\n\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Deselect all selected options.\n   * */\n  protected reset() {\n    this.selectionModel.forEach((option: NbOptionComponent<T>) => option.deselect());\n    this.selectionModel = [];\n    this.hide();\n    this.emitSelected(null);\n  }\n\n  /**\n   * Determines how to select option as multiple or single.\n   * */\n  protected selectOption(option: NbOptionComponent<T>) {\n    if (this.multiple) {\n      this.handleMultipleSelect(option);\n    } else {\n      this.handleSingleSelect(option);\n    }\n  }\n\n  /**\n   * Select single option.\n   * */\n  protected handleSingleSelect(option: NbOptionComponent<T>) {\n    const selected = this.selectionModel.pop();\n\n    if (selected && selected !== option) {\n      selected.deselect();\n    }\n\n    this.selectionModel = [option];\n    option.select();\n    this.hide();\n\n    this.emitSelected(option.value);\n  }\n\n  /**\n   * Select for multiple options.\n   * */\n  protected handleMultipleSelect(option: NbOptionComponent<T>) {\n    if (option.selected) {\n      this.selectionModel = this.selectionModel.filter(s => s.value !== option.value);\n      option.deselect();\n    } else {\n      this.selectionModel.push(option);\n      option.select();\n    }\n\n    this.emitSelected(this.selectionModel.map((opt: NbOptionComponent<T>) => opt.value));\n  }\n\n  protected createOverlay() {\n    const scrollStrategy = this.createScrollStrategy();\n    this.positionStrategy = this.createPositionStrategy();\n    this.ref = this.overlay.create({ positionStrategy: this.positionStrategy, scrollStrategy });\n  }\n\n  protected createPositionStrategy(): NbAdjustableConnectedPositionStrategy {\n    return this.positionBuilder\n      .connectedTo(this.hostRef)\n      .position(NbPosition.BOTTOM)\n      .offset(0)\n      .adjustment(NbAdjustment.VERTICAL);\n  }\n\n  protected createScrollStrategy(): NbScrollStrategy {\n    return this.overlay.scrollStrategies.block();\n  }\n\n  protected subscribeOnTriggers() {\n    const triggerStrategy: NbTriggerStrategy = new NbTriggerStrategyBuilder()\n      .document(this.document)\n      .trigger(NbTrigger.CLICK)\n      .host(this.hostRef.nativeElement)\n      .container(() => this.getContainer())\n      .build();\n\n    triggerStrategy.show$\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(() => this.show());\n\n    triggerStrategy.hide$\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(() => this.hide());\n  }\n\n  protected subscribeOnPositionChange() {\n    this.positionStrategy.positionChange\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((position: NbPosition) => this.overlayPosition = position);\n\n    this.positionStrategy.positionChange\n      .pipe(take(1))\n      .subscribe(() => this.cd.detectChanges());\n  }\n\n  protected subscribeOnSelectionChange() {\n    this.selectionChange\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((option: NbOptionComponent<T>) => this.handleSelect(option));\n  }\n\n  protected getContainer() {\n    return this.ref && this.ref.hasAttached() && <ComponentRef<any>> {\n      location: {\n        nativeElement: this.ref.overlayElement,\n      },\n    };\n  }\n\n  /**\n   * Propagate selected value.\n   * */\n  protected emitSelected(selected: T | T[]) {\n    this.onChange(selected);\n    this.selectedChange.emit(selected);\n  }\n\n  /**\n   * Set selected value in model.\n   * */\n  protected setSelection(value: T | T[]) {\n    const isArray: boolean = Array.isArray(value);\n\n    if (this.multiple && !isArray) {\n      throw new Error('Can\\'t assign single value if select is marked as multiple');\n    }\n\n    if (!this.multiple && isArray) {\n      throw new Error('Can\\'t assign array if select is not marked as multiple');\n    }\n\n    this.cleanSelection();\n\n    if (isArray) {\n      (<T[]> value).forEach((option: T) => this.selectValue(option));\n    } else {\n      this.selectValue(<T> value);\n    }\n\n    this.cd.markForCheck();\n    this.cd.detectChanges();\n  }\n\n  protected cleanSelection() {\n    this.selectionModel.forEach((option: NbOptionComponent<T>) => option.deselect());\n    this.selectionModel = [];\n  }\n\n  /**\n   * Selects value.\n   * */\n  protected selectValue(value: T) {\n    const corresponding = this.options.find((option: NbOptionComponent<T>) => option.value === value);\n\n    if (corresponding) {\n      corresponding.select();\n      this.selectionModel.push(corresponding);\n    }\n  }\n}\n"]}