{"version":3,"file":"option.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/select/option.component.ts"],"names":[],"mappings":";;;;;AAMA,OAAO,EACL,uBAAuB,EACvB,iBAAiB,EACjB,SAAS,EACT,UAAU,EACV,YAAY,EACZ,UAAU,EACV,WAAW,EACX,YAAY,EACZ,MAAM,EACN,KAAK,EACL,MAAM,GACP,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,qBAAqB,EAAE,MAAM,YAAY,CAAC;AACnD,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;;IAwCrD,2BAAmE,QAC7C,UAAsB,EACtB,EAAqB;QAFwB,WAAM,GAAN,MAAM;QACnD,eAAU,GAAV,UAAU,CAAY;QACtB,OAAE,GAAF,EAAE,CAAmB;;;;+BAPqB,IAAI,YAAY,EAAE;wBAE9D,KAAK;wBACL,KAAK;KAKxB;0BAfG,0CAAW;uBAAC,QAAiB;YAC/B,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;;;;;IAmBlD,sBAAI,2CAAY;QAHhB;;aAEK;;;;QACL;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;SACtC;;;OAAA;IAED,sBAAI,sCAAO;aAAX;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC;SAClD;;;OAAA;IAED,sBAAI,uCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;SAC7B;;;OAAA;0BAGG,4CAAa;;YACf,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;;;;;0BAInB,4CAAa;;YACf,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;;;;;IAIvB,mCAAO;QACL,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;IAGlC,kCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;QACvB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KACzB;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;QACvB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KACzB;;gBAlFF,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,SAAS,EAAE,CAAC,wBAAwB,CAAC;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,QAAQ,EAAE,yXAYT;iBACF;;;;gDAoBc,MAAM,SAAC,UAAU,CAAC,cAAM,OAAA,iBAAiB,EAAjB,CAAiB,CAAC;gBAlDvD,UAAU;gBAFV,iBAAiB;;;0BAqChB,KAAK;gCAEL,KAAK,SAAC,UAAU;oCAQhB,MAAM;kCAyBN,WAAW,SAAC,gBAAgB;kCAK5B,WAAW,SAAC,gBAAgB;4BAK5B,YAAY,SAAC,OAAO;;4BA1FvB;;SAyCa,iBAAiB","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  Output,\n} from '@angular/core';\nimport { convertToBoolProperty } from '../helpers';\nimport { NbSelectComponent } from './select.component';\n\n\n@Component({\n  selector: 'nb-option',\n  styleUrls: ['./option.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nb-checkbox *ngIf=\"withCheckbox\" [(ngModel)]=\"selected\">\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </nb-checkbox>\n\n    <ng-container *ngIf=\"!withCheckbox\">\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </ng-container>\n\n    <ng-template #content>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n})\nexport class NbOptionComponent<T> {\n  /**\n   * Option value that will be fired on selection.\n   * */\n  @Input() value: T;\n\n  @Input('disabled')\n  set setDisabled(disabled: boolean) {\n    this.disabled = convertToBoolProperty(disabled);\n  }\n\n  /**\n   * Fires value on click.\n   * */\n  @Output() selectionChange: EventEmitter<NbOptionComponent<T>> = new EventEmitter();\n\n  selected: boolean = false;\n  disabled: boolean = false;\n\n  constructor(@Inject(forwardRef(() => NbSelectComponent)) protected parent,\n              protected elementRef: ElementRef,\n              protected cd: ChangeDetectorRef) {\n  }\n\n  /**\n   * Determines should we render checkbox.\n   * */\n  get withCheckbox(): boolean {\n    return this.multiple && !!this.value;\n  }\n\n  get content() {\n    return this.elementRef.nativeElement.textContent;\n  }\n\n  get multiple() {\n    return this.parent.multiple;\n  }\n\n  @HostBinding('class.selected')\n  get selectedClass(): boolean {\n    return this.selected;\n  }\n\n  @HostBinding('class.disabled')\n  get disabledClass(): boolean {\n    return this.disabled;\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.selectionChange.emit(this);\n  }\n\n  select() {\n    this.selected = true;\n    this.cd.markForCheck();\n    this.cd.detectChanges();\n  }\n\n  deselect() {\n    this.selected = false;\n    this.cd.markForCheck();\n    this.cd.detectChanges();\n  }\n}\n\n"]}