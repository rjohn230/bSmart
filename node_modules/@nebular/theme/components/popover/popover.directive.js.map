{"version":3,"file":"popover.directive.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/popover/popover.directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  AfterViewInit,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { takeWhile } from 'rxjs/operators';\n\nimport {\n  NbAdjustableConnectedPositionStrategy,\n  NbAdjustment,\n  NbOverlayContent,\n  NbOverlayRef,\n  NbOverlayService,\n  NbPosition,\n  NbPositionBuilderService,\n  NbTrigger,\n  NbTriggerStrategy,\n  NbTriggerStrategyBuilder,\n  patch,\n  createContainer,\n} from '../cdk';\nimport { NB_DOCUMENT } from '../../theme.options';\nimport { NbPopoverComponent } from './popover.component';\n\n\n/**\n * Powerful popover directive, which provides the best UX for your users.\n *\n * @stacked-example(Showcase, popover/popover-showcase.component)\n *\n * Popover can accept different content such as:\n * TemplateRef\n *\n * ```html\n * <button [nbPopover]=\"templateRef\"></button>\n * <ng-template #templateRef>\n *   <span>Hello, Popover!</span>\n * </ng-template>\n * ```\n * ### Installation\n *\n * Import `NbPopoverModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbPopoverModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Custom components\n *\n * ```html\n * <button [nbPopover]=\"MyPopoverComponent\"></button>\n * ```\n *\n * Both custom components and templateRef popovers can receive *contentContext* property\n * that will be passed to the content props.\n *\n * Primitive types\n *\n * ```html\n * <button nbPopover=\"Hello, Popover!\"></button>\n * ```\n *\n * Popover has different placements, such as: top, bottom, left, right, start and end\n * which can be used as following:\n *\n * @stacked-example(Placements, popover/popover-placements.component)\n *\n * By default popover will try to adjust itself to maximally fit viewport\n * and provide the best user experience. It will try to change position of the popover container.\n * If you wanna disable this behaviour just set it falsy value.\n *\n * ```html\n * <button nbPopover=\"Hello, Popover!\" [nbPopoverAdjust]=\"false\"></button>\n * ```\n *\n * Also popover has some different modes which provides capability show$ and hide$ popover in different ways:\n *\n * - Click mode popover shows when a user clicking on the host element and hides when the user clicks\n * somewhere on the document except popover.\n * - Hint mode provides capability show$ popover when the user hovers on the host element\n * and hide$ popover when user hovers out of the host.\n * - Hover mode works like hint mode with one exception - when the user moves mouse from host element to\n * the container element popover will not be hidden.\n *\n * @stacked-example(Available Modes, popover/popover-modes.component.html)\n *\n * @additional-example(Template Ref, popover/popover-template-ref.component)\n * @additional-example(Custom Component, popover/popover-custom-component.component)\n * */\n@Directive({ selector: '[nbPopover]' })\nexport class NbPopoverDirective implements AfterViewInit, OnDestroy {\n\n  /**\n   * Popover content which will be rendered in NbArrowedOverlayContainerComponent.\n   * Available content: template ref, component and any primitive.\n   * */\n  @Input('nbPopover')\n  content: NbOverlayContent;\n\n  /**\n   * Container content context. Will be applied to the rendered component.\n   * */\n  @Input('nbPopoverContext')\n  context: Object = {};\n\n  /**\n   * Position will be calculated relatively host element based on the position.\n   * Can be top, right, bottom, left, start or end.\n   * */\n  @Input('nbPopoverPlacement')\n  position: NbPosition = NbPosition.TOP;\n\n  /**\n   * Container position will be changes automatically based on this strategy if container can't fit view port.\n   * Set this property to any falsy value if you want to disable automatically adjustment.\n   * Available values: clockwise, counterclockwise.\n   * */\n  @Input('nbPopoverAdjustment')\n  adjustment: NbAdjustment = NbAdjustment.CLOCKWISE;\n\n  /**\n   * Describes when the container will be shown.\n   * Available options: click, hover and hint\n   * */\n  @Input('nbPopoverMode')\n  mode: NbTrigger = NbTrigger.CLICK;\n\n  protected ref: NbOverlayRef;\n  protected container: ComponentRef<any>;\n  protected positionStrategy: NbAdjustableConnectedPositionStrategy;\n  protected triggerStrategy: NbTriggerStrategy;\n  protected alive: boolean = true;\n\n  constructor(@Inject(NB_DOCUMENT) protected document,\n              private hostRef: ElementRef,\n              private positionBuilder: NbPositionBuilderService,\n              private overlay: NbOverlayService,\n              private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  ngAfterViewInit() {\n    this.positionStrategy = this.createPositionStrategy();\n    this.ref = this.overlay.create({\n      positionStrategy: this.positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    });\n    this.triggerStrategy = this.createTriggerStrategy();\n\n    this.subscribeOnTriggers();\n    this.subscribeOnPositionChange();\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n    this.hide();\n  }\n\n  show() {\n    this.container = createContainer(this.ref, NbPopoverComponent, {\n      position: this.position,\n      content: this.content,\n      context: this.context,\n      cfr: this.componentFactoryResolver,\n    }, this.componentFactoryResolver);\n  }\n\n  hide() {\n    this.ref.detach();\n    this.container = null;\n  }\n\n  toggle() {\n    if (this.ref && this.ref.hasAttached()) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  protected createPositionStrategy(): NbAdjustableConnectedPositionStrategy {\n    return this.positionBuilder\n      .connectedTo(this.hostRef)\n      .position(this.position)\n      .adjustment(this.adjustment);\n  }\n\n  protected createTriggerStrategy(): NbTriggerStrategy {\n    return new NbTriggerStrategyBuilder()\n      .document(this.document)\n      .trigger(this.mode)\n      .host(this.hostRef.nativeElement)\n      .container(() => this.container)\n      .build();\n  }\n\n  protected subscribeOnPositionChange() {\n    this.positionStrategy.positionChange\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((position: NbPosition) => patch(this.container, { position }));\n  }\n\n  protected subscribeOnTriggers() {\n    this.triggerStrategy.show$.pipe(takeWhile(() => this.alive)).subscribe(() => this.show());\n    this.triggerStrategy.hide$.pipe(takeWhile(() => this.alive)).subscribe(() => this.hide());\n  }\n}\n"]}