{"version":3,"file":"menu.service.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/menu/menu.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Params } from '@angular/router';\nimport { Observable, BehaviorSubject, ReplaySubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { isUrlPathContain, isUrlPathEqual } from './url-matching-helpers';\n\nexport interface NbMenuBag { tag: string; item: NbMenuItem }\n\nconst itemClick$ = new Subject<NbMenuBag>();\nconst addItems$ = new ReplaySubject<{ tag: string; items: NbMenuItem[] }>(1);\nconst navigateHome$ = new ReplaySubject<{ tag: string }>(1);\nconst getSelectedItem$\n  = new ReplaySubject<{ tag: string; listener: BehaviorSubject<NbMenuBag> }>(1);\nconst itemSelect$ = new ReplaySubject<NbMenuBag>(1);\nconst itemHover$ = new ReplaySubject<NbMenuBag>(1);\nconst submenuToggle$ = new ReplaySubject<NbMenuBag>(1);\nconst collapseAll$ = new ReplaySubject<{ tag: string }>(1);\n\n// TODO: check if we need both URL and LINK\n/**\n * Menu Item options\n */\nexport class NbMenuItem {\n  /**\n   * Item Title\n   * @type {string}\n   */\n  title: string;\n  /**\n   * Item relative link (for routerLink)\n   * @type {string}\n   */\n  link?: string;\n  /**\n   * Item URL (absolute)\n   * @type {string}\n   */\n  url?: string;\n  /**\n   * Icon class name\n   * @type {string}\n   */\n  icon?: string;\n  /**\n   * Expanded by defaul\n   * @type {boolean}\n   */\n  expanded?: boolean;\n  /**\n   * Children items\n   * @type {List<NbMenuItem>}\n   */\n  children?: NbMenuItem[];\n  /**\n   * Children items height\n   * @type {number}\n   */\n  subMenuHeight?: number = 0;\n  /**\n   * HTML Link target\n   * @type {string}\n   */\n  target?: string;\n  /**\n   * Hidden Item\n   * @type {boolean}\n   */\n  hidden?: boolean;\n  /**\n   * Item is selected when partly or fully equal to the current url\n   * @type {string}\n   */\n  pathMatch?: string = 'full';\n  /**\n   * Where this is a home item\n   * @type {boolean}\n   */\n  home?: boolean;\n  /**\n   * Whether the item is just a group (non-clickable)\n   * @type {boolean}\n   */\n  group?: boolean;\n  /** Map of query parameters\n   *@type {Params}\n   */\n  queryParams?: Params;\n  parent?: NbMenuItem;\n  selected?: boolean;\n  data?: any;\n  fragment?: string;\n\n  /**\n   * @returns item parents in top-down order\n   */\n  static getParents(item: NbMenuItem): NbMenuItem[] {\n    const parents = [];\n\n    let parent = item.parent;\n    while (parent) {\n      parents.unshift(parent);\n      parent = parent.parent;\n    }\n\n    return parents;\n  }\n\n  static isParent(item: NbMenuItem, possibleChild: NbMenuItem): boolean {\n    return possibleChild.parent\n      ? possibleChild.parent === item || this.isParent(item, possibleChild.parent)\n      : false;\n  }\n}\n\n// TODO: map select events to router change events\n// TODO: review the interface\n/**\n * Menu Service. Allows you to listen to menu events, or to interact with a menu.\n */\n@Injectable()\nexport class NbMenuService {\n\n  /**\n   * Add items to the end of the menu items list\n   * @param {List<NbMenuItem>} items\n   * @param {string} tag\n   */\n  addItems(items: NbMenuItem[], tag?: string) {\n    addItems$.next({ tag, items });\n  }\n\n  /**\n   * Collapses all menu items\n   * @param {string} tag\n   */\n  collapseAll(tag?: string) {\n    collapseAll$.next({ tag });\n  }\n\n  /**\n   * Navigate to the home menu item\n   * @param {string} tag\n   */\n  navigateHome(tag?: string) {\n    navigateHome$.next({ tag });\n  }\n\n  /**\n   * Returns currently selected item. Won't subscribe to the future events.\n   * @param {string} tag\n   * @returns {Observable<{tag: string; item: NbMenuItem}>}\n   */\n  getSelectedItem(tag?: string): Observable<NbMenuBag> {\n    const listener = new BehaviorSubject<NbMenuBag>(null);\n\n    getSelectedItem$.next({ tag, listener });\n\n    return listener.asObservable();\n  }\n\n  onItemClick(): Observable<NbMenuBag> {\n    return itemClick$.pipe(share());\n  }\n\n  onItemSelect(): Observable<NbMenuBag> {\n    return itemSelect$.pipe(share());\n  }\n\n  onItemHover(): Observable<NbMenuBag> {\n    return itemHover$.pipe(share());\n  }\n\n  onSubmenuToggle(): Observable<NbMenuBag> {\n    return submenuToggle$.pipe(share());\n  }\n}\n\n@Injectable()\nexport class NbMenuInternalService {\n\n  constructor(private location: Location) {}\n\n  prepareItems(items: NbMenuItem[]) {\n    const defaultItem = new NbMenuItem();\n    items.forEach(i => {\n      this.applyDefaults(i, defaultItem);\n      this.setParent(i);\n    });\n  }\n\n  selectFromUrl(items: NbMenuItem[], tag: string, collapseOther: boolean = false) {\n    const selectedItem = this.findItemByUrl(items);\n    if (selectedItem) {\n      this.selectItem(selectedItem, items, collapseOther, tag);\n    }\n  }\n\n  selectItem(item: NbMenuItem, items: NbMenuItem[], collapseOther: boolean = false, tag: string) {\n    const unselectedItems = this.resetSelection(items);\n    const collapsedItems = collapseOther ? this.collapseItems(items) : [];\n\n    for (const parent of NbMenuItem.getParents(item)) {\n      parent.selected = true;\n      // emit event only for items that weren't selected before ('unselectedItems' contains items that were selected)\n      if (!unselectedItems.includes(parent)) {\n        this.itemSelect(parent, tag);\n      }\n\n      const wasNotExpanded = !parent.expanded;\n      parent.expanded = true;\n      const i = collapsedItems.indexOf(parent);\n      // emit event only for items that weren't expanded before.\n      // 'collapsedItems' contains items that were expanded, so no need to emit event.\n      // in case 'collapseOther' is false, 'collapsedItems' will be empty,\n      // so also check if item isn't expanded already ('wasNotExpanded').\n      if (i === -1 && wasNotExpanded) {\n        this.submenuToggle(parent, tag);\n      } else {\n        collapsedItems.splice(i, 1);\n      }\n    }\n\n    item.selected = true;\n    // emit event only for items that weren't selected before ('unselectedItems' contains items that were selected)\n    if (!unselectedItems.includes(item)) {\n      this.itemSelect(item, tag);\n    }\n\n    // remaining items which wasn't expanded back after expanding all currently selected items\n    for (const collapsedItem of collapsedItems) {\n      this.submenuToggle(collapsedItem, tag);\n    }\n  }\n\n  collapseAll(items: NbMenuItem[], tag: string, except?: NbMenuItem) {\n    const collapsedItems = this.collapseItems(items, except);\n\n    for (const item of collapsedItems) {\n      this.submenuToggle(item, tag);\n    }\n  }\n\n  onAddItem(): Observable<{ tag: string; items: NbMenuItem[] }> {\n    return addItems$.pipe(share());\n  }\n\n  onNavigateHome(): Observable<{ tag: string }> {\n    return navigateHome$.pipe(share());\n  }\n\n  onCollapseAll(): Observable<{ tag: string }> {\n    return collapseAll$.pipe(share());\n  }\n\n  onGetSelectedItem(): Observable<{ tag: string; listener: BehaviorSubject<NbMenuBag> }> {\n    return getSelectedItem$.pipe(share());\n  }\n\n  itemHover(item: NbMenuItem, tag?: string) {\n    itemHover$.next({tag, item});\n  }\n\n  submenuToggle(item: NbMenuItem, tag?: string) {\n    submenuToggle$.next({tag, item});\n  }\n\n  itemSelect(item: NbMenuItem, tag?: string) {\n    itemSelect$.next({tag, item});\n  }\n\n  itemClick(item: NbMenuItem, tag?: string) {\n    itemClick$.next({tag, item});\n  }\n\n  /**\n   * Unselect all given items deeply.\n   * @param items array of items to unselect.\n   * @returns items which selected value was changed.\n   */\n  private resetSelection(items: NbMenuItem[]): NbMenuItem[] {\n    const unselectedItems = [];\n\n    for (const item of items) {\n      if (item.selected) {\n        unselectedItems.push(item);\n      }\n      item.selected = false;\n\n      if (item.children) {\n        unselectedItems.push(...this.resetSelection(item.children));\n      }\n    }\n\n    return unselectedItems;\n  }\n\n  /**\n   * Collapse all given items deeply.\n   * @param items array of items to collapse.\n   * @param except menu item which shouldn't be collapsed, also disables collapsing for parents of this item.\n   * @returns items which expanded value was changed.\n   */\n  private collapseItems(items: NbMenuItem[], except?: NbMenuItem): NbMenuItem[] {\n    const collapsedItems = [];\n\n    for (const item of items) {\n      if (except && (item === except || NbMenuItem.isParent(item, except))) {\n        continue;\n      }\n\n      if (item.expanded) {\n        collapsedItems.push(item)\n      }\n      item.expanded = false;\n\n      if (item.children) {\n        collapsedItems.push(...this.collapseItems(item.children));\n      }\n    }\n\n    return collapsedItems;\n  }\n\n  private applyDefaults(item, defaultItem) {\n    const menuItem = {...item};\n    Object.assign(item, defaultItem, menuItem);\n    item.children && item.children.forEach(child => {\n      this.applyDefaults(child, defaultItem);\n    });\n  }\n\n  private setParent(item: NbMenuItem) {\n    item.children && item.children.forEach(child => {\n      child.parent = item;\n      this.setParent(child);\n    });\n  }\n\n  /**\n   * Find deepest item which link matches current URL path.\n   * @param items array of items to search in.\n   * @returns found item of undefined.\n   */\n  private findItemByUrl(items: NbMenuItem[]): NbMenuItem | undefined {\n    let selectedItem;\n\n    items.some(item => {\n      if (item.children) {\n        selectedItem = this.findItemByUrl(item.children);\n      }\n      if (!selectedItem && this.isSelectedInUrl(item)) {\n        selectedItem = item;\n      }\n\n      return selectedItem;\n    });\n\n    return selectedItem;\n  }\n\n  private isSelectedInUrl(item: NbMenuItem): boolean {\n    const exact: boolean = item.pathMatch === 'full';\n    return exact\n      ? isUrlPathEqual(this.location.path(), item.link)\n      : isUrlPathContain(this.location.path(), item.link);\n  }\n}\n"]}