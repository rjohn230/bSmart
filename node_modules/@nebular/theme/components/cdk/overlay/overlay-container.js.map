{"version":3,"file":"overlay-container.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/cdk/overlay/overlay-container.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,wBAAwB,EAGxB,WAAW,EACX,QAAQ,EACR,KAAK,EACL,gBAAgB,GACjB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAqB,gBAAgB,EAAoB,MAAM,WAAW,CAAC;;;;0BAM5E,sCAAG;;YACL,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,GAAG,CAAA;;;;;0BAIrC,wCAAK;;YACP,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,KAAK,CAAA;;;;;0BAIvC,yCAAM;;YACR,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,MAAM,CAAA;;;;;0BAIxC,uCAAI;;YACN,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,IAAI,CAAA;;;;;;6BAnBzC,KAAK;wBAEL,WAAW,SAAC,sBAAsB;0BAKlC,WAAW,SAAC,wBAAwB;2BAKpC,WAAW,SAAC,yBAAyB;yBAKrC,WAAW,SAAC,uBAAuB;;gCAhCtC;;SAcsB,qBAAqB;;IAkCzC,qCAAsB,GAAqB,EAAY,QAAkB;QAAnD,QAAG,GAAH,GAAG,CAAkB;QAAY,aAAQ,GAAR,QAAQ,CAAU;KACxE;IAED,sBAAI,wDAAe;aAAnB;YACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;SACvB;;;OAAA;IAED,2DAAqB,GAArB,UAAyB,MAA4B;QACnD,IAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACrE,IAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KAC1D;IAED,0DAAoB,GAApB,UAAwB,MAA2B;QACjD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;KACxE;IAED,yDAAmB,GAAnB,UAAoB,OAAe;QACjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;IAES,yDAAmB,GAA7B,UAA8B,GAA6B;QACzD,MAAM,CAAC,IAAI,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,OAAO,CAAC;YACrD,CAAC,wBAAwB,EAAE,GAAG,CAAC;SAChC,CAAC,CAAC,CAAC;KACL;;gBAlCF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,0FAET;iBACF;;;;gBApCC,gBAAgB;gBAFhB,QAAQ;;sCANV;;SA6Ca,2BAA2B","sourcesContent":["import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  HostBinding,\n  Injector,\n  Input,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { NbPosition } from './overlay-position';\nimport { NbComponentPortal, NbPortalInjector, NbTemplatePortal } from './mapping';\n\nexport abstract class NbPositionedContainer {\n  @Input() position: NbPosition;\n\n  @HostBinding('class.nb-overlay-top')\n  get top(): boolean {\n    return this.position === NbPosition.TOP\n  }\n\n  @HostBinding('class.nb-overlay-right')\n  get right(): boolean {\n    return this.position === NbPosition.RIGHT\n  }\n\n  @HostBinding('class.nb-overlay-bottom')\n  get bottom(): boolean {\n    return this.position === NbPosition.BOTTOM\n  }\n\n  @HostBinding('class.nb-overlay-left')\n  get left(): boolean {\n    return this.position === NbPosition.LEFT\n  }\n}\n\n\n@Component({\n  selector: 'nb-overlay-container',\n  template: `\n    <div *ngIf=\"isStringContent\" class=\"primitive-overlay\">{{ content }}</div>\n  `,\n})\nexport class NbOverlayContainerComponent {\n  content: string;\n\n  constructor(protected vcr: ViewContainerRef, protected injector: Injector) {\n  }\n\n  get isStringContent(): boolean {\n    return !!this.content;\n  }\n\n  attachComponentPortal<T>(portal: NbComponentPortal<T>): ComponentRef<T> {\n    const factory = portal.cfr.resolveComponentFactory(portal.component);\n    const injector = this.createChildInjector(portal.cfr);\n    return this.vcr.createComponent(factory, null, injector);\n  }\n\n  attachTemplatePortal<C>(portal: NbTemplatePortal<C>): EmbeddedViewRef<C> {\n    return this.vcr.createEmbeddedView(portal.templateRef, portal.context);\n  }\n\n  attachStringContent(content: string) {\n    this.content = content;\n  }\n\n  protected createChildInjector(cfr: ComponentFactoryResolver): NbPortalInjector {\n    return new NbPortalInjector(this.injector, new WeakMap([\n      [ComponentFactoryResolver, cfr],\n    ]));\n  }\n}\n"]}