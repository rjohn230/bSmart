{"version":3,"file":"datepicker.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/datepicker/datepicker.component.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  Type,\n} from '@angular/core';\nimport { takeWhile } from 'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n  NbAdjustableConnectedPositionStrategy,\n  NbAdjustment,\n  NbComponentPortal,\n  NbOverlayRef,\n  NbOverlayService,\n  NbPosition,\n  NbPositionBuilderService,\n  NbTrigger,\n  NbTriggerStrategy,\n  NbTriggerStrategyBuilder,\n  patch,\n} from '../cdk';\nimport { NbDatepickerContainerComponent } from './datepicker-container.component';\nimport { NB_DOCUMENT } from '../../theme.options';\nimport { NbCalendarRange, NbCalendarRangeComponent } from '../calendar/calendar-range.component'\nimport { NbCalendarComponent } from '../calendar/calendar.component';\nimport { NbCalendarCell, NbCalendarSize, NbCalendarViewMode } from '../calendar-kit';\nimport { NbDatepicker, NbPickerValidatorConfig } from './datepicker.directive';\n\n\n/**\n * The `NbBasePicker` component concentrates overlay manipulation logic.\n * */\nexport abstract class NbBasePicker<D, T, P> extends NbDatepicker<T> implements OnDestroy {\n  /**\n   * Datepicker date format.\n   * */\n  @Input() format: string;\n\n  /**\n   * Defines if we should render previous and next months\n   * in the current month view.\n   * */\n  @Input() boundingMonth: boolean = true;\n\n  /**\n   * Defines starting view for calendar.\n   * */\n  @Input() startView: NbCalendarViewMode = NbCalendarViewMode.DATE;\n\n  /**\n   * Minimum available date for selection.\n   * */\n  @Input() min: T;\n\n  /**\n   * Maximum available date for selection.\n   * */\n  @Input() max: T;\n\n  /**\n   * Predicate that decides which cells will be disabled.\n   * */\n  @Input() filter: (T) => boolean;\n\n  /**\n   * Custom day cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() dayCellComponent: Type<NbCalendarCell<D, T>>;\n\n  /**\n   * Custom month cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() monthCellComponent: Type<NbCalendarCell<D, T>>;\n\n  /**\n   * Custom year cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() yearCellComponent: Type<NbCalendarCell<D, T>>;\n\n  /**\n   * Size of the calendar and entire components.\n   * Can be 'medium' which is default or 'large'.\n   * */\n  @Input() size: NbCalendarSize = NbCalendarSize.MEDIUM;\n\n  /**\n   * Depending on this date a particular month is selected in the calendar\n   */\n  @Input() visibleDate: D;\n\n  /**\n   * Hide picker when a date or a range is selected, `true` by default\n   * @type {boolean}\n   */\n  @Input() hideOnSelect: boolean = true;\n\n  /**\n   * Calendar component class that has to be instantiated inside overlay.\n   * */\n  protected abstract pickerClass: Type<P>;\n\n  /**\n   * Overlay reference object.\n   * */\n  protected ref: NbOverlayRef;\n\n  /**\n   * Datepicker container that contains instantiated picker.\n   * */\n  protected container: ComponentRef<NbDatepickerContainerComponent>;\n\n  /**\n   * Positioning strategy used by overlay.\n   * */\n  protected positionStrategy: NbAdjustableConnectedPositionStrategy;\n\n  /**\n   * HTML input reference to which datepicker connected.\n   * */\n  protected hostRef: ElementRef;\n\n  /**\n   * Stream of picker changes. Required to be the subject because picker hides and shows and picker\n   * change stream becomes recreated.\n   * */\n  protected onChange$: Subject<T> = new Subject();\n\n  /**\n   * Reference to the picker instance itself.\n   * */\n  protected pickerRef: ComponentRef<any>;\n\n  protected alive: boolean = true;\n\n  /**\n   * Queue contains the last value that was applied to the picker when it was hidden.\n   * This value will be passed to the picker as soon as it shown.\n   * */\n  protected queue: T;\n\n  constructor(@Inject(NB_DOCUMENT) protected document,\n              protected positionBuilder: NbPositionBuilderService,\n              protected overlay: NbOverlayService,\n              protected cfr: ComponentFactoryResolver) {\n    super();\n  }\n\n  /**\n   * Returns picker instance.\n   * */\n  get picker(): any {\n    return this.pickerRef && this.pickerRef.instance;\n  }\n\n  /**\n   * Stream of picker value changes.\n   * */\n  get valueChange(): Observable<T> {\n    return this.onChange$.asObservable();\n  }\n\n  protected abstract get pickerValueChange(): Observable<T>;\n\n  ngOnDestroy() {\n    this.alive = false;\n    this.hide();\n    this.ref.dispose();\n  }\n\n  /**\n   * Datepicker knows nothing about host html input element.\n   * So, attach method attaches datepicker to the host input element.\n   * */\n  attach(hostRef: ElementRef) {\n    this.hostRef = hostRef;\n\n    this.positionStrategy = this.createPositionStrategy();\n    this.ref = this.overlay.create({\n      positionStrategy: this.positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    });\n    this.subscribeOnPositionChange();\n    this.subscribeOnTriggers();\n  }\n\n  getValidatorConfig(): NbPickerValidatorConfig<T> {\n    return { min: this.min, max: this.max, filter: this.filter };\n  }\n\n  show() {\n    this.container = this.ref.attach(new NbComponentPortal(NbDatepickerContainerComponent, null, null, this.cfr));\n    this.instantiatePicker();\n    this.subscribeOnValueChange();\n    this.writeQueue();\n    this.patchWithInputs();\n  }\n\n  shouldHide(): boolean {\n    return this.hideOnSelect && !!this.value;\n  }\n\n  hide() {\n    this.ref.detach();\n    // save current value if picker was rendered\n    if (this.picker) {\n      this.queue = this.value;\n      this.pickerRef.destroy();\n      this.pickerRef = null;\n      this.container = null;\n    }\n  }\n\n  protected abstract writeQueue();\n\n  protected createPositionStrategy(): NbAdjustableConnectedPositionStrategy {\n    return this.positionBuilder\n      .connectedTo(this.hostRef)\n      .position(NbPosition.BOTTOM)\n      .adjustment(NbAdjustment.COUNTERCLOCKWISE);\n  }\n\n  protected subscribeOnPositionChange() {\n    this.positionStrategy.positionChange\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((position: NbPosition) => patch(this.container, { position }));\n  }\n\n  protected createTriggerStrategy(): NbTriggerStrategy {\n    return new NbTriggerStrategyBuilder()\n      .document(this.document)\n      .trigger(NbTrigger.FOCUS)\n      .host(this.hostRef.nativeElement)\n      .container(() => this.container)\n      .build();\n  }\n\n  protected subscribeOnTriggers() {\n    const triggerStrategy = this.createTriggerStrategy();\n    triggerStrategy.show$.pipe(takeWhile(() => this.alive)).subscribe(() => this.show());\n    triggerStrategy.hide$.pipe(takeWhile(() => this.alive)).subscribe(() => this.hide());\n  }\n\n  protected instantiatePicker() {\n    this.pickerRef = this.container.instance.attach(new NbComponentPortal(this.pickerClass, null, null, this.cfr));\n  }\n\n  /**\n   * Subscribes on picker value changes and emit data through this.onChange$ subject.\n   * */\n  protected subscribeOnValueChange() {\n    this.pickerValueChange.subscribe(date => {\n      this.onChange$.next(date);\n    });\n  }\n\n  protected patchWithInputs() {\n    this.picker.boundingMonth = this.boundingMonth;\n    this.picker.startView = this.startView;\n    this.picker.min = this.min;\n    this.picker.max = this.max;\n    this.picker.filter = this.filter;\n    this.picker._cellComponent = this.dayCellComponent;\n    this.picker.monthCellComponent = this.monthCellComponent;\n    this.picker._yearCellComponent = this.yearCellComponent;\n    this.picker.size = this.size;\n    this.picker.visibleDate = this.visibleDate;\n  }\n}\n\n/**\n * The DatePicker components itself.\n * Provides a proxy to `NbCalendar` options as well as custom picker options.\n */\n@Component({\n  selector: 'nb-datepicker',\n  template: '',\n})\nexport class NbDatepickerComponent<D> extends NbBasePicker<D, D, NbCalendarComponent<D>> {\n  protected pickerClass: Type<NbCalendarComponent<D>> = NbCalendarComponent;\n\n  /**\n   * Date which will be rendered as selected.\n   * */\n  @Input() set date(date: D) {\n    this.value = date;\n  }\n\n  /**\n   * Emits date when selected.\n   * */\n  @Output() get dateChange(): EventEmitter<D> {\n    return this.valueChange as EventEmitter<D>;\n  }\n\n  get value(): D {\n    return this.picker.date;\n  }\n\n  set value(date: D) {\n    if (!this.picker) {\n      this.queue = date;\n      return;\n    }\n\n    if (date) {\n      this.picker.visibleDate = date;\n      this.picker.date = date;\n    }\n  }\n\n  protected get pickerValueChange(): Observable<D> {\n    return this.picker.dateChange;\n  }\n\n  protected writeQueue() {\n    this.value = this.queue;\n  }\n}\n\n/**\n * The RangeDatePicker components itself.\n * Provides a proxy to `NbCalendarRange` options as well as custom picker options.\n */\n@Component({\n  selector: 'nb-rangepicker',\n  template: '',\n})\nexport class NbRangepickerComponent<D> extends NbBasePicker<D, NbCalendarRange<D>, NbCalendarRangeComponent<D>> {\n  protected pickerClass: Type<NbCalendarRangeComponent<D>> = NbCalendarRangeComponent;\n\n  /**\n   * Range which will be rendered as selected.\n   * */\n  @Input() set range(range: NbCalendarRange<D>) {\n    this.value = range;\n  }\n\n  /**\n   * Emits range when start selected and emits again when end selected.\n   * */\n  @Output() get rangeChange(): EventEmitter<NbCalendarRange<D>> {\n    return this.valueChange as EventEmitter<NbCalendarRange<D>>;\n  }\n\n  get value(): NbCalendarRange<D> {\n    return this.picker.range;\n  }\n\n  set value(range: NbCalendarRange<D>) {\n    if (!this.picker) {\n      this.queue = range;\n      return;\n    }\n\n    if (range) {\n      this.picker.visibleDate = range && range.start;\n      this.picker.range = range;\n    }\n  }\n\n  protected get pickerValueChange(): Observable<NbCalendarRange<D>> {\n    return this.picker.rangeChange;\n  }\n\n  shouldHide(): boolean {\n    return super.shouldHide() && !!(this.value.start && this.value.end);\n  }\n\n  protected writeQueue() {\n    this.value = this.queue;\n  }\n}\n"]}