{"version":3,"file":"spinner.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/spinner/spinner.component.ts"],"names":[],"mappings":";;;;;AAMA,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;;;;;;oBA+B7C,kBAAkB,CAAC,WAAW;sBAC5B,kBAAkB,CAAC,aAAa;;;;;uBAMtB,YAAY;;0BAQ3B,uCAAO;;;;;;kBAAC,GAAW;YAC7B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;;;;;0BASN,yCAAS;;;;;;kBAAC,GAAW;YAC/B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;;;;;0BAIhB,uCAAO;;YACT,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC,YAAY,CAAC;;;;;0BAInD,sCAAM;;YACR,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC,WAAW,CAAC;;;;;0BAIlD,qCAAK;;YACP,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC,UAAU,CAAC;;;;;0BAIjD,sCAAM;;YACR,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC,WAAW,CAAC;;;;;0BAIlD,qCAAK;;YACP,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC,UAAU,CAAC;;;;;0BAIjD,sCAAM;;YACR,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC,WAAW,CAAC;;;;;0BAIlD,uCAAO;;YACT,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC,YAAY,CAAC;;;;;0BAInD,sCAAM;;YACR,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,kBAAkB,CAAC,aAAa,CAAC;;;;;0BAItD,wCAAQ;;YACV,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,kBAAkB,CAAC,eAAe,CAAC;;;;;0BAIxD,uCAAO;;YACT,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,kBAAkB,CAAC,cAAc,CAAC;;;;;0BAIvD,oCAAI;;YACN,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,kBAAkB,CAAC,WAAW,CAAC;;;;;0BAIpD,uCAAO;;YACT,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,kBAAkB,CAAC,cAAc,CAAC;;;;;0BAIvD,uCAAO;;YACT,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,kBAAkB,CAAC,cAAc,CAAC;;;;;0BAIvD,sCAAM;;YACR,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,kBAAkB,CAAC,aAAa,CAAC;;;;;sCAhH3B,SAAS;qCACV,QAAQ;oCACT,OAAO;qCACN,QAAQ;oCACT,OAAO;qCACN,QAAQ;sCACP,SAAS;uCAER,QAAQ;yCACN,UAAU;wCACX,SAAS;qCACZ,MAAM;wCACH,SAAS;wCACT,SAAS;uCACV,QAAQ;;gBAxBzC,SAAS,SAAC;oBACT,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE,mHAGT;oBACD,SAAS,EAAE,CAAC,yBAAyB,CAAC;iBACvC;;;;4BA0BE,KAAK;4BAOL,KAAK,SAAC,MAAM;8BAUZ,KAAK,SAAC,QAAQ;4BAKd,WAAW,SAAC,uBAAuB;2BAKnC,WAAW,SAAC,sBAAsB;0BAKlC,WAAW,SAAC,qBAAqB;2BAKjC,WAAW,SAAC,sBAAsB;0BAKlC,WAAW,SAAC,qBAAqB;2BAKjC,WAAW,SAAC,sBAAsB;4BAKlC,WAAW,SAAC,uBAAuB;2BAKnC,WAAW,SAAC,sBAAsB;6BAKlC,WAAW,SAAC,wBAAwB;4BAKpC,WAAW,SAAC,uBAAuB;yBAKnC,WAAW,SAAC,oBAAoB;4BAKhC,WAAW,SAAC,uBAAuB;4BAKnC,WAAW,SAAC,uBAAuB;2BAKnC,WAAW,SAAC,sBAAsB;;6BAnIrC;;SAmBa,kBAAkB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, HostBinding, Input } from '@angular/core';\n\n/**\n * Styled spinner component\n */\n@Component({\n  selector: 'nb-spinner',\n  template: `\n    <span class=\"spin-circle\"></span>\n    <span class=\"message\" *ngIf=\"message\">{{ message }}</span>\n  `,\n  styleUrls: ['./spinner.component.css'],\n})\nexport class NbSpinnerComponent {\n\n  static readonly SIZE_XXSMALL = 'xxsmall';\n  static readonly SIZE_XSMALL = 'xsmall';\n  static readonly SIZE_SMALL = 'small';\n  static readonly SIZE_MEDIUM = 'medium';\n  static readonly SIZE_LARGE = 'large';\n  static readonly SIZE_XLARGE = 'xlarge';\n  static readonly SIZE_XXLARGE = 'xxlarge';\n\n  static readonly STATUS_ACTIVE = 'active';\n  static readonly STATUS_DISABLED = 'disabled';\n  static readonly STATUS_PRIMARY = 'primary';\n  static readonly STATUS_INFO = 'info';\n  static readonly STATUS_SUCCESS = 'success';\n  static readonly STATUS_WARNING = 'warning';\n  static readonly STATUS_DANGER = 'danger';\n\n  size: string = NbSpinnerComponent.SIZE_MEDIUM;\n  status: string = NbSpinnerComponent.STATUS_ACTIVE;\n\n  /**\n   * Loading text that is shown near the icon\n   * @type string\n   */\n  @Input() message: string = 'Loading...';\n\n  /**\n   * Spiiner size, available sizes:\n   * xxsmall, xsmall, small, medium, large, xlarge, xxlarge\n   * @param {string} val\n   */\n  @Input('size')\n  private set setSize(val: string) {\n    this.size = val;\n  }\n\n  /**\n   * Spiiner status (adds specific styles):\n   * active, disabled, primary, info, success, warning, danger\n   * @param {string} val\n   */\n  @Input('status')\n  private set setStatus(val: string) {\n    this.status = val;\n  }\n\n  @HostBinding('class.xxsmall-spinner')\n  get xxsmall() {\n    return this.size === NbSpinnerComponent.SIZE_XXSMALL;\n  }\n\n  @HostBinding('class.xsmall-spinner')\n  get xsmall() {\n    return this.size === NbSpinnerComponent.SIZE_XSMALL;\n  }\n\n  @HostBinding('class.small-spinner')\n  get small() {\n    return this.size === NbSpinnerComponent.SIZE_SMALL;\n  }\n\n  @HostBinding('class.medium-spinner')\n  get medium() {\n    return this.size === NbSpinnerComponent.SIZE_MEDIUM;\n  }\n\n  @HostBinding('class.large-spinner')\n  get large() {\n    return this.size === NbSpinnerComponent.SIZE_LARGE;\n  }\n\n  @HostBinding('class.xlarge-spinner')\n  get xlarge() {\n    return this.size === NbSpinnerComponent.SIZE_XLARGE;\n  }\n\n  @HostBinding('class.xxlarge-spinner')\n  get xxlarge() {\n    return this.size === NbSpinnerComponent.SIZE_XXLARGE;\n  }\n\n  @HostBinding('class.active-spinner')\n  get active() {\n    return this.status === NbSpinnerComponent.STATUS_ACTIVE;\n  }\n\n  @HostBinding('class.disabled-spinner')\n  get disabled() {\n    return this.status === NbSpinnerComponent.STATUS_DISABLED;\n  }\n\n  @HostBinding('class.primary-spinner')\n  get primary() {\n    return this.status === NbSpinnerComponent.STATUS_PRIMARY;\n  }\n\n  @HostBinding('class.info-spinner')\n  get info() {\n    return this.status === NbSpinnerComponent.STATUS_INFO;\n  }\n\n  @HostBinding('class.success-spinner')\n  get success() {\n    return this.status === NbSpinnerComponent.STATUS_SUCCESS;\n  }\n\n  @HostBinding('class.warning-spinner')\n  get warning() {\n    return this.status === NbSpinnerComponent.STATUS_WARNING;\n  }\n\n  @HostBinding('class.danger-spinner')\n  get danger() {\n    return this.status === NbSpinnerComponent.STATUS_DANGER;\n  }\n}\n"]}