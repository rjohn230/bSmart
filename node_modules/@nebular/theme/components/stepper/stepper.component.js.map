{"version":3,"file":"stepper.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/stepper/stepper.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Component,\n  ContentChildren, HostBinding,\n  Input,\n  QueryList,\n} from '@angular/core';\nimport { NbStepComponent } from './step.component';\n\nexport enum NbStepperOrientation {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n}\n\n/**\n * Stepper component\n *\n * @stacked-example(Showcase, stepper/stepper-showcase.component)\n *\n * ### Installation\n *\n * Import `NbStepperModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbStepperModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * If step label is string you can pass it as `label` attribute. Otherwise ng-template should be used:\n * ```html\n * // ...\n * <nb-stepper orientation=\"horizontal\">\n *   <nb-step label=\"step number one\">\n *       // ... step content here\n *   <nb-step>\n *   <nb-step label=\"stepLabel\">\n *       <ng-template #stepLabel>\n *           <div>\n *               step number two\n *           </div>\n *       </ng-template>\n *       // ... step content here\n *   <nb-step>\n * </nb-stepper>\n * ```\n * Specify `[stepControl]=\"form\"` and user can navigates only if submit previous step's form.\n * ```html\n * // ...\n * <nb-stepper  orientation=\"horizontal\">\n *   <nb-step label=\"step number one\" [stepControl]=\"form\">\n *     <form [formGroup]=\"form\">\n *       // ...\n *     </form>\n *   <nb-step>\n *    // ...\n * </nb-stepper>\n * ```\n *\n * @stacked-example(Validation, stepper/stepper-validation.component)\n *\n * Stepper component has two layout options - `vertical` & `horizontal`\n * @stacked-example(Vertical, stepper/stepper-vertical.component)\n *\n * @styles\n *\n * stepper-index-size:\n * stepper-label-font-size:\n * stepper-label-font-weight:\n * stepper-accent-color:\n * stepper-completed-fg:\n * stepper-fg:\n * stepper-completed-icon-size:\n * stepper-completed-icon-weight:\n */\n@Component({\n  selector: 'nb-stepper',\n  styleUrls: ['./stepper.component.css'],\n  templateUrl: './stepper.component.html',\n})\nexport class NbStepperComponent {\n\n  @ContentChildren(NbStepComponent) steps: QueryList<NbStepComponent>;\n\n  @HostBinding('class.vertical')\n  get vertical() {\n    return this.orientation === NbStepperOrientation.VERTICAL;\n  }\n\n  @HostBinding('class.horizontal')\n  get horizontal() {\n    return this.orientation === NbStepperOrientation.HORIZONTAL;\n  }\n\n  /**\n   * Selected step index\n   *\n   * @type {boolean}\n   */\n  @Input()\n  get selectedIndex() {\n    return this.index;\n  }\n\n  set selectedIndex(index: number) {\n    if (this.steps) {\n      if (this.index !== index && this.isStepValid(index)) {\n        this.index = index;\n      }\n    } else {\n      this.index = index;\n    }\n  }\n\n  /**\n   * Selected step component\n   *\n   * @type {boolean}\n   */\n  @Input()\n  get selected(): NbStepComponent | undefined {\n    return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n  }\n\n  set selected(step: NbStepComponent) {\n    this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n  }\n\n  /**\n   * Stepper orientation - `horizontal`|`vertical`\n   * @type {string}\n   */\n  @Input() orientation: string = NbStepperOrientation.HORIZONTAL;\n\n  private index = 0;\n\n  /**\n   * Navigate to next step\n   * */\n  next() {\n    this.selectedIndex = Math.min(this.index + 1, this.steps.length - 1);\n  }\n\n  /**\n   * Navigate to previous step\n   * */\n  previous() {\n    this.selectedIndex = Math.max(this.index - 1, 0);\n  }\n\n  /**\n   * Reset stepper and stepControls to initial state\n   * */\n  reset() {\n    this.selectedIndex = 0;\n    this.steps.forEach(step => step.reset());\n  }\n\n  isStepSelected(step: NbStepComponent) {\n    return this.index === this.steps.toArray().indexOf(step);\n  }\n\n  private isStepValid(index: number): boolean {\n    const steps = this.steps.toArray();\n\n    steps[this.index].interacted = true;\n\n    if (index >= this.index && index > 0) {\n      const currentStep = steps[this.index];\n      return currentStep.completed;\n    }\n\n    return true;\n  }\n}\n"]}