{"version":3,"file":"step.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/stepper/step.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,UAAU,EACV,MAAM,EACN,KAAK,EACL,WAAW,EACX,SAAS,GACV,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;AACjD,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AACzD,OAAO,EAAE,qBAAqB,EAAE,MAAM,YAAY,CAAC;;;;;;IA2EjD,yBAAkE;QAAA,YAAO,GAAP,OAAO;8BARvC,KAAK;0BAM1B,KAAK;KAGjB;IA3BD,sBAAI,4CAAe;QALnB;;;;aAIK;;;;;;QACL;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,YAAY,WAAW,CAAC;SAC1C;;;OAAA;0BAQG,sCAAS;;;;;;;YACX,MAAM,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC;;aAGjD,UAAc,KAAc;YAC1B,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;SACpD;;;;IAID,sBAAY,wCAAW;aAAvB;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;SACvF;;;OAAA;IAOD;;SAEK;;;;IACL,gCAAM;;;IAAN;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;KAC9B;IAED;;SAEK;;;;IACL,+BAAK;;;IAAL;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SAC1B;KACF;;gBAvFF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,8EAIT;iBACF;;;;gBAdQ,kBAAkB,uBA4EZ,MAAM,SAAC,UAAU,CAAC,cAAM,OAAA,kBAAkB,EAAlB,CAAkB,CAAC;;;4BAtDvD,SAAS,SAAC,WAAW;gCAOrB,KAAK;0BAOL,KAAK;2BAOL,KAAK;8BAgBL,KAAK;;0BApER;;SAwBa,eAAe","sourcesContent":["import {\n  Component,\n  forwardRef,\n  Inject,\n  Input,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { NbStepperComponent } from './stepper.component';\nimport { convertToBoolProperty } from '../helpers';\n\n/**\n * Component intended to be used within  the `<nb-stepper>` component.\n * Container for a step\n */\n@Component({\n  selector: 'nb-step',\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n})\nexport class NbStepComponent {\n\n  /**\n   * Step content\n   *\n   * @type {TemplateRef}\n   */\n  @ViewChild(TemplateRef) content: TemplateRef<any>;\n\n  /**\n   * Top level abstract control of the step\n   *\n   * @type {AbstractControl}\n   */\n  @Input() stepControl: AbstractControl;\n\n  /**\n   * Step label\n   *\n   * @type {string|TemplateRef<any>}\n   */\n  @Input() label: string|TemplateRef<any>;\n\n  /**\n   * Whether step will be displayed in wizard\n   *\n   * @type {boolean}\n   */\n  @Input() hidden: false;\n\n  /**\n   * Check that label is a TemplateRef.\n   *\n   * @return boolean\n   * */\n  get isLabelTemplate(): boolean {\n    return this.label instanceof TemplateRef;\n  }\n\n  /**\n   * Whether step is marked as completed.\n   *\n   * @type {boolean}\n   */\n  @Input()\n  get completed(): boolean {\n    return this.completedValue || this.isCompleted;\n  }\n\n  set completed(value: boolean) {\n    this.completedValue = convertToBoolProperty(value);\n  }\n\n  private completedValue: boolean = false;\n\n  private get isCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n\n  interacted = false;\n\n  constructor(@Inject(forwardRef(() => NbStepperComponent)) private stepper: NbStepperComponent) {\n  }\n\n  /**\n   * Mark step as selected\n   * */\n  select(): void {\n    this.stepper.selected = this;\n  }\n\n  /**\n   * Reset step and stepControl state\n   * */\n  reset(): void {\n    this.interacted = false;\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n}\n"]}