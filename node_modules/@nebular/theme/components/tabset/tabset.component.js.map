{"version":3,"file":"tabset.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/tabset/tabset.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { map, delay } from 'rxjs/operators';\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  HostBinding,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { convertToBoolProperty } from '../helpers';\n\n/**\n * Specific tab container.\n *\n * ```ts\n * <nb-tab tabTitle=\"Users\"\n *   badgeText=\"99+\"\n *   badgeStatus=\"danger\">\n *   <p>List of <strong>users</strong>.</p>\n * </nb-tab>\n ```\n */\n@Component({\n  selector: 'nb-tab',\n  template: `\n    <ng-container *ngIf=\"init\">\n      <ng-content></ng-content>\n    </ng-container>\n  `,\n})\nexport class NbTabComponent {\n\n  /**\n   * Tab title\n   * @type {string}\n   */\n  @Input() tabTitle: string;\n\n  /**\n   * Tab icon\n   * @type {string}\n   */\n  @Input() tabIcon: string;\n\n  /**\n   * Show only icons when width is smaller than `tabs-icon-only-max-width`\n   * @type {boolean}\n   */\n  @Input()\n  set responsive(val: boolean) {\n    this.responsiveValue = convertToBoolProperty(val);\n  }\n\n  get responsive() {\n    return this.responsiveValue;\n  }\n\n  @Input() route: string;\n\n  @HostBinding('class.content-active')\n  activeValue: boolean = false;\n\n  responsiveValue: boolean = false;\n\n  /**\n   * Specifies active tab\n   * @returns {boolean}\n   */\n  @Input()\n  get active() {\n    return this.activeValue;\n  }\n  set active(val: boolean) {\n    this.activeValue = convertToBoolProperty(val);\n    if (this.activeValue) {\n      this.init = true;\n    }\n  }\n\n  /**\n   * Lazy load content before tab selection\n   * TODO: rename, as lazy is by default, and this is more `instant load`\n   * @param {boolean} val\n   */\n  @Input()\n  set lazyLoad(val: boolean) {\n    this.init = convertToBoolProperty(val);\n  }\n\n  /**\n   * Badge text to display\n   * @type string\n   */\n  @Input() badgeText: string;\n\n  /**\n   * Badge status (adds specific styles):\n   * 'primary', 'info', 'success', 'warning', 'danger'\n   * @param {string} val\n   */\n  @Input() badgeStatus: string;\n\n  /**\n   * Badge position.\n   * Can be set to any class or to one of predefined positions:\n   * 'top left', 'top right', 'bottom left', 'bottom right',\n   * 'top start', 'top end', 'bottom start', 'bottom end'\n   * @type string\n   */\n  @Input() badgePosition: string;\n\n  init: boolean = false;\n}\n\n// TODO: Combine tabset with route-tabset, so that we can:\n// - have similar interface\n// - easy to migrate from one to another\n// - can mix them both (route/content tab)\n/**\n *\n * Dynamic tabset component.\n * @stacked-example(Showcase, tabset/tabset-showcase.component)\n *\n * Basic tabset example\n *\n * ```html\n * <nb-tabset>\n *  <nb-tab tabTitle=\"Simple Tab #1\">\n *    Tab content 1\n *  </nb-tab>\n *  <nb-tab tabTitle=\"Simple Tab #2\">\n *    Tab content 2\n *  </nb-tab>\n * </nb-tabset>\n * ```\n *\n * ### Installation\n *\n * Import `NbTabsetModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbTabsetModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * It is also possible to set a badge to a particular tab:\n * @stacked-example(Tab With Badge, tabset/tabset-badge.component)\n *\n * and we can set it to full a width of a parent component\n * @stacked-example(Full Width, tabset/tabset-width.component)\n *\n * `tabIcon` should be used to add an icon to the tab. Icon can also be combined with title.\n * `responsive` tab property if set allows you to hide the title on smaller screens\n * (`tabs-icon-only-max-width` property) for better responsive behaviour. You can open the following example and make\n * your screen smaller - titles will be hidden in the last tabset in the list:\n *\n * @stacked-example(Icon, tabset/tabset-icon.component)\n *\n * @styles\n *\n * tabs-font-family:\n * tabs-font-size:\n * tabs-content-font-family:\n * tabs-content-font-size:\n * tabs-active-bg:\n * tabs-active-font-weight:\n * tabs-padding:\n * tabs-content-padding:\n * tabs-header-bg:\n * tabs-separator:\n * tabs-fg:\n * tabs-fg-text:\n * tabs-fg-heading:\n * tabs-bg:\n * tabs-selected:\n * tabs-icon-only-max-width\n *\n */\n@Component({\n  selector: 'nb-tabset',\n  styleUrls: ['./tabset.component.css'],\n  template: `\n    <ul>\n      <li *ngFor=\"let tab of tabs\"\n          (click)=\"selectTab(tab)\"\n          [class.responsive]=\"tab.responsive\"\n          [class.active]=\"tab.active\">\n        <a href (click)=\"$event.preventDefault()\">\n          <i *ngIf=\"tab.tabIcon\" [class]=\"tab.tabIcon\"></i>\n          <span *ngIf=\"tab.tabTitle\">{{ tab.tabTitle }}</span>\n        </a>\n        <nb-badge *ngIf=\"tab.badgeText\"\n          [text]=\"tab.badgeText\"\n          [status]=\"tab.badgeStatus\"\n          [position]=\"tab.badgePosition\">\n        </nb-badge>\n      </li>\n    </ul>\n    <ng-content select=\"nb-tab\"></ng-content>\n  `,\n})\nexport class NbTabsetComponent implements AfterContentInit {\n\n  @ContentChildren(NbTabComponent) tabs: QueryList<NbTabComponent>;\n\n  @HostBinding('class.full-width')\n  fullWidthValue: boolean = false;\n\n  /**\n   * Take full width of a parent\n   * @param {boolean} val\n   */\n  @Input()\n  set fullWidth(val: boolean) {\n    this.fullWidthValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * If specified - tabset listens to this parameter and selects corresponding tab.\n   * @type {string}\n   */\n  @Input() routeParam: string;\n\n  /**\n   * Emits when tab is selected\n   * @type EventEmitter<any>\n   */\n  @Output() changeTab = new EventEmitter<any>();\n\n  constructor(private route: ActivatedRoute,\n              private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  // TODO: refactoring this component, avoid change detection loop\n  ngAfterContentInit() {\n    this.route.params\n      .pipe(\n        map(\n          (params: any) =>\n            this.tabs.find((tab) => this.routeParam ? tab.route === params[this.routeParam] : tab.active),\n        ),\n        delay(0),\n      )\n      .subscribe((activeTab) => {\n        this.selectTab(activeTab || this.tabs.first);\n        this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  // TODO: navigate to routeParam\n  selectTab(selectedTab: NbTabComponent) {\n    this.tabs.forEach(tab => tab.active = tab === selectedTab);\n    this.changeTab.emit(selectedTab);\n  }\n}\n"]}