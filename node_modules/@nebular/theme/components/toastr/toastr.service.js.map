{"version":3,"file":"toastr.service.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/toastr/toastr.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ComponentFactoryResolver, ComponentRef, Inject, Injectable } from '@angular/core';\n\nimport {\n  NbComponentPortal,\n  NbGlobalLogicalPosition,\n  NbGlobalPosition,\n  NbOverlayService,\n  NbPositionBuilderService,\n  NbPositionHelper,\n  patch,\n} from '../cdk';\nimport { NbToastrContainerComponent } from './toastr-container.component';\nimport { NB_TOASTR_CONFIG, NbToastrConfig } from './toastr-config';\nimport { NbToast, NbToastStatus } from './model';\nimport { NbToastComponent } from './toast.component';\n\n\nexport class NbToastContainer {\n  protected toasts: NbToast[] = [];\n  protected prevToast: NbToast;\n\n  constructor(protected position: NbGlobalPosition,\n              protected containerRef: ComponentRef<NbToastrContainerComponent>,\n              protected positionHelper: NbPositionHelper) {\n  }\n\n  attach(toast: NbToast) {\n    if (toast.config.preventDuplicates && this.isDuplicate(toast)) {\n      return;\n    }\n\n    const toastComponent: NbToastComponent = this.attachToast(toast);\n\n    if (toast.config.destroyByClick) {\n      this.subscribeOnClick(toastComponent, toast);\n    }\n\n    if (toast.config.duration) {\n      this.setDestroyTimeout(toast);\n    }\n\n    this.prevToast = toast;\n  }\n\n  protected isDuplicate(toast: NbToast): boolean {\n    return this.prevToast\n      && this.prevToast.message === toast.message\n      && this.prevToast.title === toast.title;\n  }\n\n  protected attachToast(toast: NbToast): NbToastComponent {\n    if (this.positionHelper.isTopPosition(toast.config.position)) {\n      return this.attachToTop(toast);\n    } else {\n      return this.attachToBottom(toast);\n    }\n  }\n\n  protected attachToTop(toast: NbToast): NbToastComponent {\n    this.toasts.unshift(toast);\n    this.updateContainer();\n    return this.containerRef.instance.toasts.first;\n  }\n\n  protected attachToBottom(toast: NbToast): NbToastComponent {\n    this.toasts.push(toast);\n    this.updateContainer();\n    return this.containerRef.instance.toasts.last;\n  }\n\n  protected setDestroyTimeout(toast: NbToast) {\n    setTimeout(() => this.destroy(toast), toast.config.duration);\n  }\n\n  protected subscribeOnClick(toastComponent: NbToastComponent, toast: NbToast) {\n    toastComponent.destroy.subscribe(() => this.destroy(toast));\n  }\n\n  protected destroy(toast: NbToast) {\n    this.toasts = this.toasts.filter(t => t !== toast);\n    this.updateContainer();\n  }\n\n  protected updateContainer() {\n    patch(this.containerRef, { content: this.toasts, position: this.position });\n  }\n}\n\n\n@Injectable()\nexport class NbToastrContainerRegistry {\n  protected overlays: Map<NbGlobalPosition, NbToastContainer> = new Map();\n\n  constructor(protected overlay: NbOverlayService,\n              protected positionBuilder: NbPositionBuilderService,\n              protected positionHelper: NbPositionHelper,\n              protected cfr: ComponentFactoryResolver) {\n  }\n\n  get(position: NbGlobalPosition): NbToastContainer {\n    const logicalPosition: NbGlobalLogicalPosition = this.positionHelper.toLogicalPosition(position);\n\n    if (!this.overlays.has(logicalPosition)) {\n      this.instantiateContainer(logicalPosition);\n    }\n\n    return this.overlays.get(logicalPosition);\n  }\n\n  protected instantiateContainer(position: NbGlobalLogicalPosition) {\n    const container = this.createContainer(position);\n    this.overlays.set(position, container);\n  }\n\n  protected createContainer(position: NbGlobalLogicalPosition): NbToastContainer {\n    const positionStrategy = this.positionBuilder.global().position(position);\n    const ref = this.overlay.create({ positionStrategy });\n    const containerRef = ref.attach(new NbComponentPortal(NbToastrContainerComponent, null, null, this.cfr));\n    return new NbToastContainer(position, containerRef, this.positionHelper);\n  }\n}\n\n/**\n * The `NbToastrService` provides a capability to build toast notifications.\n *\n * @stacked-example(Showcase, toastr/toastr-showcase.component)\n *\n * `NbToastrService.show(message, title, config)` accepts three params, title and config are optional.\n *\n * ### Installation\n *\n * Import `NbToastrModule.forRoot()` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbToastrModule.forRoot(config),\n *   ],\n * })\n * export class AppModule { }\n * ```\n *\n * ### Usage\n *\n * Config accepts following options:\n *\n * `position` - determines where on the screen toast will be rendered.\n * Default is `top-end`.\n *\n * @stacked-example(Position, toastr/toastr-positions.component)\n *\n * `status` - coloring and icon of the toast.\n * Default is `primary`\n *\n * @stacked-example(Status, toastr/toastr-statuses.component)\n *\n * `duration` - the time after which the toast will be destroyed.\n * `0` means endless toast, that may be destroyed by click only.\n * Default is 3000 ms.\n *\n * @stacked-example(Duration, toastr/toastr-duration.component)\n *\n * `destroyByClick` - provides a capability to destroy toast by click.\n * Default is true.\n *\n * @stacked-example(Destroy by click, toastr/toastr-destroy-by-click.component)\n *\n * `preventDuplicates` - don't create new toast if it has the same title and the same message with previous one.\n * Default is false.\n *\n * @stacked-example(Prevent duplicates, toastr/toastr-prevent-duplicates.component)\n *\n * `hasIcon` - if true then render toast icon.\n * `icon` - you can pass icon class that will be applied into the toast.\n *\n * @stacked-example(Has icon, toastr/toastr-icon.component)\n * */\n@Injectable()\nexport class NbToastrService {\n  constructor(@Inject(NB_TOASTR_CONFIG) protected globalConfig: NbToastrConfig,\n              protected containerRegistry: NbToastrContainerRegistry) {\n  }\n\n  /**\n   * Shows toast with message, title and user config.\n   * */\n  show(message, title?, userConfig?: Partial<NbToastrConfig>) {\n    const config = new NbToastrConfig({ ...this.globalConfig, ...userConfig });\n    const container = this.containerRegistry.get(config.position);\n    const toast = { message, title, config };\n    container.attach(toast);\n  }\n\n  /**\n   * Shows success toast with message, title and user config.\n   * */\n  success(message, title?, config?: Partial<NbToastrConfig>) {\n    return this.show(message, title, { ...config, status: NbToastStatus.SUCCESS });\n  }\n\n  /**\n   * Shows info toast with message, title and user config.\n   * */\n  info(message, title?, config?: Partial<NbToastrConfig>) {\n    return this.show(message, title, { ...config, status: NbToastStatus.INFO });\n  }\n\n  /**\n   * Shows warning toast with message, title and user config.\n   * */\n  warning(message, title?, config?: Partial<NbToastrConfig>) {\n    return this.show(message, title, { ...config, status: NbToastStatus.WARNING });\n  }\n\n  /**\n   * Shows primary toast with message, title and user config.\n   * */\n  primary(message, title?, config?: Partial<NbToastrConfig>) {\n    return this.show(message, title, { ...config, status: NbToastStatus.PRIMARY });\n  }\n\n  /**\n   * Shows danger toast with message, title and user config.\n   * */\n  danger(message, title?, config?: Partial<NbToastrConfig>) {\n    return this.show(message, title, { ...config, status: NbToastStatus.DANGER });\n  }\n\n  /**\n   * Shows default toast with message, title and user config.\n   * */\n  default(message, title?, config?: Partial<NbToastrConfig>) {\n    return this.show(message, title, { ...config, status: NbToastStatus.DEFAULT });\n  }\n}\n"]}