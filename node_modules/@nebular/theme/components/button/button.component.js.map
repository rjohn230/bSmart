{"version":3,"file":"button.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/button/button.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, Input, HostBinding, HostListener } from '@angular/core';\nimport { convertToBoolProperty } from '../helpers';\n\n/**\n * Basic button component.\n *\n * Default button size is `medium` and status color is `primary`:\n * @stacked-example(Button Showcase, button/button-showcase.component)\n *\n * ```html\n * <button nbButton></button>\n * ```\n * ### Installation\n *\n * Import `NbButtonModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbButtonModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Buttons are available in multiple colors using `status` property:\n * @stacked-example(Button Colors, button/button-colors.component.html)\n *\n * There are three button sizes:\n *\n * @stacked-example(Button Sizes, button/button-sizes.component.html)\n *\n * And two additional style types - `outline`:\n *\n * @stacked-example(Outline Buttons, button/button-outline.component.html)\n *\n * and `hero`:\n *\n * @stacked-example(Button Colors, button/button-hero.component.html)\n *\n * Buttons available in different shapes, which could be combined with the other properties:\n * @stacked-example(Button Shapes, button/button-shapes.component)\n *\n * `nbButton` could be applied to the following selectors - `button`, `input[type=\"button\"]`, `input[type=\"submit\"]`\n * and `a`:\n * @stacked-example(Button Elements, button/button-types.component.html)\n *\n * Button can be made `fullWidth`:\n * @stacked-example(Full Width Button, button/button-full-width.component.html)\n *\n * @styles\n *\n * btn-fg:\n * btn-font-family:\n * btn-line-height:\n * btn-disabled-opacity:\n * btn-cursor:\n * btn-primary-bg:\n * btn-secondary-bg:\n * btn-info-bg:\n * btn-success-bg:\n * btn-warning-bg:\n * btn-danger-bg:\n * btn-secondary-border:\n * btn-secondary-border-width:\n * btn-padding-y-lg:\n * btn-padding-x-lg:\n * btn-font-size-lg:\n * btn-padding-y-md:\n * btn-padding-x-md:\n * btn-font-size-md:\n * btn-padding-y-sm:\n * btn-padding-x-sm:\n * btn-font-size-sm:\n * btn-padding-y-xs:\n * btn-padding-x-xs:\n * btn-font-size-xs:\n * btn-border-radius:\n * btn-rectangle-border-radius:\n * btn-semi-round-border-radius:\n * btn-round-border-radius:\n * btn-hero-shadow:\n * btn-hero-text-shadow:\n * btn-hero-bevel-size:\n * btn-hero-glow-size:\n * btn-hero-primary-glow-size:\n * btn-hero-success-glow-size:\n * btn-hero-warning-glow-size:\n * btn-hero-info-glow-size:\n * btn-hero-danger-glow-size:\n * btn-hero-secondary-glow-size:\n * btn-hero-degree:\n * btn-hero-primary-degree:\n * btn-hero-success-degree:\n * btn-hero-warning-degree:\n * btn-hero-info-degree:\n * btn-hero-danger-degree:\n * btn-hero-secondary-degree:\n * btn-hero-border-radius:\n * btn-outline-fg:\n * btn-outline-hover-fg:\n * btn-outline-focus-fg:\n */\n@Component({\n  selector: 'button[nbButton],a[nbButton],input[type=\"button\"][nbButton],input[type=\"submit\"][nbButton]',\n  styleUrls: ['./button.component.css'],\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class NbButtonComponent {\n\n  static readonly SIZE_XSMALL = 'xsmall';\n  static readonly SIZE_SMALL = 'small';\n  static readonly SIZE_MEDIUM = 'medium';\n  static readonly SIZE_LARGE = 'large';\n\n  static readonly STATUS_PRIMARY = 'primary';\n  static readonly STATUS_INFO = 'info';\n  static readonly STATUS_SUCCESS = 'success';\n  static readonly STATUS_WARNING = 'warning';\n  static readonly STATUS_DANGER = 'danger';\n\n  static readonly SHAPE_RECTANGLE = 'rectangle';\n  static readonly SHAPE_ROUND = 'round';\n  static readonly SHAPE_SEMI_ROUND = 'semi-round';\n\n  size: string;\n  status: string;\n  accent: string;\n  shape: string;\n\n  @HostBinding('class.btn-xsmall')\n  get xsmall() {\n    return this.size === NbButtonComponent.SIZE_XSMALL;\n  }\n\n  @HostBinding('class.btn-small')\n  get small() {\n    return this.size === NbButtonComponent.SIZE_SMALL;\n  }\n\n  @HostBinding('class.btn-medium')\n  get medium() {\n    return this.size === NbButtonComponent.SIZE_MEDIUM;\n  }\n\n  @HostBinding('class.btn-large')\n  get large() {\n    return this.size === NbButtonComponent.SIZE_LARGE;\n  }\n\n  @HostBinding('class.btn-primary')\n  get primary() {\n    return this.status === NbButtonComponent.STATUS_PRIMARY;\n  }\n\n  @HostBinding('class.btn-info')\n  get info() {\n    return this.status === NbButtonComponent.STATUS_INFO;\n  }\n\n  @HostBinding('class.btn-success')\n  get success() {\n    return this.status === NbButtonComponent.STATUS_SUCCESS;\n  }\n\n  @HostBinding('class.btn-warning')\n  get warning() {\n    return this.status === NbButtonComponent.STATUS_WARNING;\n  }\n\n  @HostBinding('class.btn-danger')\n  get danger() {\n    return this.status === NbButtonComponent.STATUS_DANGER;\n  }\n\n  @HostBinding('class.btn-rectangle')\n  get rectangle() {\n    return this.shape === NbButtonComponent.SHAPE_RECTANGLE;\n  }\n\n  @HostBinding('class.btn-round')\n  get round() {\n    return this.shape === NbButtonComponent.SHAPE_ROUND;\n  }\n\n  @HostBinding('class.btn-semi-round')\n  get semiRound() {\n    return this.shape === NbButtonComponent.SHAPE_SEMI_ROUND;\n  }\n\n  @HostBinding('class.btn-hero') hero: boolean;\n  @HostBinding('class.btn-outline') outline: boolean;\n\n  @HostBinding('attr.aria-disabled')\n  @HostBinding('class.btn-disabled') disabled: boolean;\n\n  @HostBinding('attr.tabindex')\n  get tabbable(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  @HostBinding('class.btn-full-width')\n  fullWidth = false;\n\n  /**\n   * Button size, available sizes:\n   * `xxsmall`, `xsmall`, `small`, `medium`, `large`\n   * @param {string} val\n   */\n  @Input('size')\n  private set setSize(val: string) {\n    this.size = val;\n  }\n\n  /**\n   * Button status (adds specific styles):\n   * `primary`, `info`, `success`, `warning`, `danger`\n   * @param {string} val\n   */\n  @Input('status')\n  private set setStatus(val: string) {\n    this.status = val;\n  }\n\n  /**\n   * Button shapes: `rectangle`, `round`, `semi-round`\n   * @param {string} val\n   */\n  @Input('shape')\n  private set setShape(val: string) {\n    this.shape = val;\n  }\n\n  /**\n   * Adds `hero` styles\n   * @param {boolean} val\n   */\n  @Input('hero')\n  set setHero(val: boolean) {\n    this.hero = convertToBoolProperty(val);\n  }\n\n  /**\n   * Disables the button\n   * @param {boolean} val\n   */\n  @Input('disabled')\n  set setDisabled(val: boolean) {\n    this.disabled = convertToBoolProperty(val);\n  }\n\n  /**\n   * If set element will fill its container\n   * @param {boolean}\n   */\n  @Input('fullWidth')\n  set setFullWidth(value) {\n    this.fullWidth = convertToBoolProperty(value);\n  }\n\n  /**\n   * Adds `outline` styles\n   * @param {boolean} val\n   */\n  @Input('outline')\n  set setOutline(val: boolean) {\n    this.outline = convertToBoolProperty(val);\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: Event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n}\n"]}