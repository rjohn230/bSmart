{"version":3,"file":"accordion.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/accordion/accordion.component.ts"],"names":[],"mappings":";;;;;AAMA,OAAO,EAAE,SAAS,EAAE,uBAAuB,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC1E,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAC/B,OAAO,EAAE,qBAAqB,EAAE,MAAM,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BA0EhC,IAAI,OAAO,EAAW;0BAclB,KAAK;;0BAPtB,uCAAK;;;;;;YACP,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;;aAEzB,UAAU,GAAY;YACpB,IAAI,CAAC,UAAU,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;SAC9C;;;;IAID;;OAEG;;;;IACH,sCAAO;;;IAAP;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjC;KACF;IAED;;OAEG;;;;IACH,uCAAQ;;;IAAR;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChC;yCAtC+B,QAAQ;2CACN,UAAU;0CACX,SAAS;uCACZ,MAAM;0CACH,SAAS;0CACT,SAAS;yCACV,QAAQ;;gBAfzC,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,kEAET;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;;;;0BAiBE,KAAK,SAAC,OAAO;;+BAxFhB;;SAwEa,oBAAoB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { convertToBoolProperty } from '../helpers';\n\n/**\n * An accordion allows to toggle the display of sections of content\n *\n * Basic example\n * @stacked-example(Showcase, accordion/accordion-showcase.component)\n *\n * ```ts\n * <nb-accordion>\n *  <nb-accordion-item>\n *   <nb-accordion-item-header>Product Details</nb-accordion-item-header>\n *   <nb-accordion-item-body>\n *     Item Content\n *   </nb-accordion-item-body>\n *  </nb-accordion-item>\n * </nb-accordion>\n * ```\n * ### Installation\n *\n * Import `NbAccordionModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbAccordionModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * With `multi` mode acordion can have multiple items expanded:\n * @stacked-example(Showcase, accordion/accordion-multi.component)\n *\n * `NbAccordionItemComponent` has several method, for example it is possible to trigger item click/toggle:\n * @stacked-example(Showcase, accordion/accordion-toggle.component)\n *\n * @styles\n *\n * accordion-padding:\n * accordion-separator:\n * accordion-header-font-family:\n * accordion-header-font-size:\n * accordion-header-font-weight:\n * accordion-header-fg-heading:\n * accordion-header-disabled-fg:\n * accordion-header-border-width:\n * accordion-header-border-type:\n * accordion-header-border-color:\n * accordion-item-bg:\n * accordion-item-font-size:\n * accordion-item-font-weight:\n * accordion-item-font-family:\n * accordion-item-fg-text:\n * accordion-item-shadow:\n */\n@Component({\n  selector: 'nb-accordion',\n  template: `\n    <ng-content select=\"nb-accordion-item\"></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbAccordionComponent {\n\n  static readonly STATUS_ACTIVE = 'active';\n  static readonly STATUS_DISABLED = 'disabled';\n  static readonly STATUS_PRIMARY = 'primary';\n  static readonly STATUS_INFO = 'info';\n  static readonly STATUS_SUCCESS = 'success';\n  static readonly STATUS_WARNING = 'warning';\n  static readonly STATUS_DANGER = 'danger';\n\n  openCloseItems = new Subject<boolean>();\n\n  /**\n   *  Allow multiple items to be expanded at the same time.\n   * @type {boolean}\n   */\n  @Input('multi')\n  get multi(): boolean {\n    return this.multiValue;\n  }\n  set multi(val: boolean) {\n    this.multiValue = convertToBoolProperty(val);\n  }\n\n  private multiValue = false;\n\n  /**\n   * Opens all enabled accordion items.\n   */\n  openAll() {\n    if (this.multi) {\n      this.openCloseItems.next(false);\n    }\n  }\n\n  /**\n   * Closes all enabled accordion items.\n   */\n  closeAll() {\n    this.openCloseItems.next(true);\n  }\n}\n"]}