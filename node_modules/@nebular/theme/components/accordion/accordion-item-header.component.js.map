{"version":3,"file":"accordion-item-header.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/accordion/accordion-item-header.component.ts"],"names":[],"mappings":";;;;;AAMA,OAAO,EACL,SAAS,EACT,uBAAuB,EACvB,IAAI,EACJ,WAAW,EACX,YAAY,EAGZ,iBAAiB,GAClB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;AACjF,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;;;;;IAkEpE,wCAA4B,eAAiD,EAAqB;QAAtE,kBAAa,GAAb,aAAa;QAAoC,OAAE,GAAF,EAAE,CAAmB;qBADzE,IAAI;KAE5B;0BApCG,uDAAW;;YACb,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;;;;;0BAKlC,oDAAQ;;YACV,MAAM,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;;;;;0BAInC,oDAAQ;;YACV,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;;;;;0BAI9C,oDAAQ;;YACV,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;;;;;IAIrC,+CAAM;QACJ,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;;IAG9B,sBAAI,iDAAK;aAAT;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC,WAAW,CAAC;aACpB;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,UAAU,CAAC;aACnB;SACF;;;OAAA;IAMD,iDAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,uBAAuB;aACvC,IAAI,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aACjC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,EAAE,CAAC,YAAY,EAAE,EAAtB,CAAsB,CAAC,CAAC;KAC5C;IAED,oDAAW,GAAX;QACE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;gBAxEF,SAAS,SAAC;oBACT,QAAQ,EAAE,0BAA0B;oBACpC,SAAS,EAAE,CAAC,uCAAuC,CAAC;oBACpD,QAAQ,EAAE,wQAKT;oBACD,UAAU,EAAE;wBACV,OAAO,CAAC,oBAAoB,EAAE;4BAC5B,KAAK,CACH,UAAU,EACV,KAAK,CAAC;gCACJ,SAAS,EAAE,gBAAgB;6BAC5B,CAAC,CACH;4BACD,UAAU,CAAC,uBAAuB,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC;4BAC7D,UAAU,CAAC,uBAAuB,EAAE,OAAO,CAAC,gBAAgB,CAAC,CAAC;yBAC/D,CAAC;qBACH;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;;;;gBA3BQ,wBAAwB,uBAkElB,IAAI;gBAvEjB,iBAAiB;;;gCAmChB,WAAW,SAAC,uCAAuC;6BAKnD,WAAW,SAAC,sCAAsC,cAClD,WAAW,SAAC,oBAAoB;6BAKhC,WAAW,SAAC,eAAe;6BAK3B,WAAW,SAAC,oBAAoB;2BAKhC,YAAY,SAAC,OAAO;;yCAtEvB;;SA+Ca,8BAA8B","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Host,\n  HostBinding,\n  HostListener,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { NbAccordionItemComponent } from './accordion-item.component';\n\n/**\n * Component intended to be used within `<nb-accordion-item>` component\n */\n@Component({\n  selector: 'nb-accordion-item-header',\n  styleUrls: ['./accordion-item-header.component.css'],\n  template: `\n    <ng-content select=\"nb-accordion-item-title\"></ng-content>\n    <ng-content select=\"nb-accordion-item-description\"></ng-content>\n    <ng-content></ng-content>\n    <i [@expansionIndicator]=\"state\" *ngIf=\"!disabled\" class=\"nb-arrow-down\"></i>\n  `,\n  animations: [\n    trigger('expansionIndicator', [\n      state(\n        'expanded',\n        style({\n          transform: 'rotate(180deg)',\n        }),\n      ),\n      transition('collapsed => expanded', animate('100ms ease-in')),\n      transition('expanded => collapsed', animate('100ms ease-out')),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbAccordionItemHeaderComponent implements OnInit, OnDestroy {\n\n  @HostBinding('class.accordion-item-header-collapsed')\n  get isCollapsed(): boolean {\n    return this.accordionItem.collapsed;\n  }\n\n  @HostBinding('class.accordion-item-header-expanded')\n  @HostBinding('attr.aria-expanded')\n  get expanded(): boolean {\n    return !this.accordionItem.collapsed;\n  }\n\n  @HostBinding('attr.tabindex')\n  get tabbable(): string {\n    return this.accordionItem.disabled ? '-1' : '0';\n  }\n\n  @HostBinding('attr.aria-disabled')\n  get disabled(): boolean {\n    return this.accordionItem.disabled;\n  }\n\n  @HostListener('click')\n  toggle() {\n    this.accordionItem.toggle();\n  }\n\n  get state(): string {\n    if (this.isCollapsed) {\n      return 'collapsed';\n    }\n    if (this.expanded) {\n      return 'expanded';\n    }\n  }\n\n  private alive: boolean = true;\n  constructor(@Host() private accordionItem: NbAccordionItemComponent, private cd: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    this.accordionItem.accordionItemInvalidate\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(() => this.cd.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n}\n"]}