{"version":3,"file":"accordion-item.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/accordion/accordion-item.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Input,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  HostBinding,\n  Host,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { NbAccordionComponent } from './accordion.component';\nimport { convertToBoolProperty } from '../helpers';\n\n/**\n * Component intended to be used within `<nb-accordion>` component\n */\n@Component({\n  selector: 'nb-accordion-item',\n  styleUrls: ['./accordion-item.component.css'],\n  template: `\n    <ng-content select=\"nb-accordion-item-header\"></ng-content>\n    <ng-content select=\"nb-accordion-item-body\"></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbAccordionItemComponent implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Item is collapse (`true` by default)\n   * @type {boolean}\n   */\n  @Input('collapsed')\n  @HostBinding('class.collapsed')\n  get collapsed(): boolean {\n    return this.collapsedValue;\n  }\n  set collapsed(val: boolean) {\n    this.collapsedValue = convertToBoolProperty(val);\n    this.collapsedChange.emit(this.collapsedValue);\n    this.invalidate();\n  }\n\n  /**\n   * Item is expanded (`false` by default)\n   * @type {boolean}\n   */\n  @Input('expanded')\n  @HostBinding('class.expanded')\n  get expanded(): boolean {\n    return !this.collapsed;\n  }\n  set expanded(val: boolean) {\n    this.collapsedValue = !convertToBoolProperty(val);\n  }\n\n  /**\n   * Item is disabled and cannot be opened.\n   * @type {boolean}\n   */\n  @Input('disabled')\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this.disabledValue;\n  }\n  set disabled(val: boolean) {\n    this.disabledValue = convertToBoolProperty(val);\n    this.invalidate();\n  }\n\n  /**\n   * Emits whenever the expanded state of the accordion changes.\n   * Primarily used to facilitate two-way binding.\n   */\n  @Output() collapsedChange = new EventEmitter<boolean>();\n\n  accordionItemInvalidate = new Subject<boolean>();\n\n  private collapsedValue = true;\n  private disabledValue = false;\n  private alive = true;\n\n  constructor(@Host() private accordion: NbAccordionComponent, private cd: ChangeDetectorRef) {\n  }\n\n  /**\n   * Open/close the item\n   */\n  toggle() {\n    if (!this.disabled) {\n      // we need this temporary variable as `openCloseItems.next` will change current value we need to save\n      const willSet = !this.collapsed;\n\n      if (!this.accordion.multi) {\n        this.accordion.openCloseItems.next(true);\n      }\n      this.collapsed = willSet;\n    }\n  }\n\n  /**\n   * Open the item.\n   */\n  open() {\n    !this.disabled && (this.collapsed = false);\n  }\n\n  /**\n   * Collapse the item.\n   */\n  close() {\n    !this.disabled && (this.collapsed = true);\n  }\n\n  ngOnInit() {\n    this.accordion.openCloseItems\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(collapsed => {\n        !this.disabled && (this.collapsed = collapsed);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.accordionItemInvalidate.next(true);\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n    this.accordionItemInvalidate.complete();\n  }\n\n  private invalidate() {\n    this.accordionItemInvalidate.next(true);\n    this.cd.markForCheck();\n  }\n}\n"]}