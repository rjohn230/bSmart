{"version":3,"file":"accordion-item-body.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/accordion/accordion-item-body.component.ts"],"names":[],"mappings":";;;;;AAMA,OAAO,EACL,SAAS,EACT,uBAAuB,EACvB,IAAI,EACJ,UAAU,EACV,iBAAiB,GAGlB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;AACjF,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AAEtE,IAAM,wBAAwB,GAAG,OAAO,CAAC,mBAAmB,EAAE;IAC5D,KAAK,CACH,WAAW,EACX,KAAK,CAAC;QACJ,QAAQ,EAAE,QAAQ;QAClB,UAAU,EAAE,QAAQ;QACpB,MAAM,EAAE,CAAC;KACV,CAAC,CACH;IACD,KAAK,CACH,UAAU,EACV,KAAK,CAAC;QACJ,QAAQ,EAAE,QAAQ;QAClB,UAAU,EAAE,SAAS;QACrB,MAAM,EAAE,qBAAqB;KAC9B,CAAC,EACF,EAAE,MAAM,EAAE,EAAE,aAAa,EAAE,MAAM,EAAE,EAAE,CACtC;IACD,UAAU,CAAC,uBAAuB,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC;IAC7D,UAAU,CAAC,uBAAuB,EAAE,OAAO,CAAC,gBAAgB,CAAC,CAAC;CAC/D,CAAC,CAAC;;;;;IAuBD,sCACkB,eACR,EAAc,EACd,EAAqB;QAFb,kBAAa,GAAb,aAAa;QACrB,OAAE,GAAF,EAAE,CAAY;QACd,OAAE,GAAF,EAAE,CAAmB;qBALN,IAAI;KAM5B;IAED,sBAAI,+CAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC;SAChE;;;OAAA;IAED,+CAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,aAAa,GAAM,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,YAAY,OAAI,CAAC;QAC/D,IAAI,CAAC,aAAa,CAAC,uBAAuB;aACvC,IAAI,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aACjC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,EAAE,CAAC,YAAY,EAAE,EAAtB,CAAsB,CAAC,CAAC;KAC5C;IAED,kDAAW,GAAX;QACE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;gBArCF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,mMAMT;oBACD,UAAU,EAAE,CAAC,wBAAwB,CAAC;oBACtC,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;;;;gBAtCQ,wBAAwB,uBA8C5B,IAAI;gBAtDP,UAAU;gBACV,iBAAiB;;uCAXnB;;SAyDa,4BAA4B","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Host,\n  ElementRef,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { NbAccordionItemComponent } from './accordion-item.component';\n\nconst accordionItemBodyTrigger = trigger('accordionItemBody', [\n  state(\n    'collapsed',\n    style({\n      overflow: 'hidden',\n      visibility: 'hidden',\n      height: 0,\n    }),\n  ),\n  state(\n    'expanded',\n    style({\n      overflow: 'hidden',\n      visibility: 'visible',\n      height: '{{ contentHeight }}',\n    }),\n    { params: { contentHeight: '1rem' } },\n  ),\n  transition('collapsed => expanded', animate('100ms ease-in')),\n  transition('expanded => collapsed', animate('100ms ease-out')),\n]);\n\n/**\n * Component intended to be used within `<nb-accordion-item>` component\n */\n@Component({\n  selector: 'nb-accordion-item-body',\n  template: `\n    <div [@accordionItemBody]=\"{ value: state, params: { contentHeight: contentHeight } }\">\n      <div class=\"item-body\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  animations: [accordionItemBodyTrigger],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbAccordionItemBodyComponent implements OnInit, OnDestroy {\n\n  contentHeight: string;\n\n  private alive: boolean = true;\n\n  constructor(\n    @Host() private accordionItem: NbAccordionItemComponent,\n    private el: ElementRef,\n    private cd: ChangeDetectorRef) {\n  }\n\n  get state(): string {\n    return this.accordionItem.collapsed ? 'collapsed' : 'expanded';\n  }\n\n  ngOnInit() {\n    this.contentHeight = `${this.el.nativeElement.clientHeight}px`;\n    this.accordionItem.accordionItemInvalidate\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(() => this.cd.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n}\n"]}