{"version":3,"file":"chat-form.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/chat/chat-form.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * Chat form component.\n *\n * Show a message form with a send message button.\n *\n * ```ts\n * <nb-chat-form showButton=\"true\" buttonIcon=\"nb-send\">\n * </nb-chat-form>\n * ```\n *\n * When `[dropFiles]=\"true\"` handles files drag&drop with a file preview.\n *\n * Drag & drop available for files and images:\n * @stacked-example(Drag & Drop Chat, chat/chat-drop.component)\n *\n * New message could be tracked outside by using `(send)` output.\n *\n * ```ts\n * <nb-chat-form (send)=\"onNewMessage($event)\">\n * </nb-chat-form>\n *\n * // ...\n *\n * onNewMessage({ message: string, files: any[] }) {\n *   this.service.sendToServer(message, files);\n * }\n * ```\n *\n * @styles\n *\n * chat-form-bg:\n * chat-form-fg:\n * chat-form-border:\n * chat-form-active-border:\n *\n */\n@Component({\n  selector: 'nb-chat-form',\n  template: `\n    <div class=\"dropped-files\" *ngIf=\"droppedFiles?.length\">\n      <ng-container *ngFor=\"let file of droppedFiles\">\n        <div *ngIf=\"file.urlStyle\" [style.background-image]=\"file.urlStyle\">\n          <span class=\"remove\" (click)=\"removeFile(file)\">&times;</span>\n        </div>\n        <div *ngIf=\"!file.urlStyle\" class=\"nb-compose\">\n          <span class=\"remove\" (click)=\"removeFile(file)\">&times;</span>\n        </div>\n      </ng-container>\n    </div>\n    <div class=\"message-row\">\n      <input [(ngModel)]=\"message\"\n             [class.with-button]=\"showButton\"\n             type=\"text\"\n             placeholder=\"{{ fileOver ? 'Drop file to send' : 'Type a message' }}\"\n             (keyup.enter)=\"sendMessage()\">\n      <button *ngIf=\"showButton\" class=\"btn\" [class.with-icon]=\"!buttonTitle\" (click)=\"sendMessage()\">\n        {{ buttonTitle }}<span *ngIf=\"!buttonTitle\" [class]=\"buttonIcon\"></span>\n      </button>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbChatFormComponent {\n\n  droppedFiles: any[] = [];\n  imgDropTypes = ['image/png', 'image/jpeg', 'image/gif'];\n\n  /**\n   * Predefined message text\n   * @type {string}\n   */\n  @Input() message: string = '';\n\n  /**\n   * Send button title\n   * @type {string}\n   */\n  @Input() buttonTitle: string = '';\n\n  /**\n   * Send button icon, shown if `buttonTitle` is empty\n   * @type {string}\n   */\n  @Input() buttonIcon: string = 'nb-paper-plane';\n\n  /**\n   * Show send button\n   * @type {boolean}\n   */\n  @Input() showButton: boolean = true;\n\n  /**\n   * Show send button\n   * @type {boolean}\n   */\n  @Input() dropFiles: boolean = false;\n\n  /**\n   *\n   * @type {EventEmitter<{ message: string, files: File[] }>}\n   */\n  @Output() send = new EventEmitter<{ message: string, files: File[] }>();\n\n  @HostBinding('class.file-over') fileOver = false;\n\n  constructor(private cd: ChangeDetectorRef, private domSanitizer: DomSanitizer) {\n  }\n\n  @HostListener('drop', ['$event'])\n  onDrop(event: any) {\n    if (this.dropFiles) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.fileOver = false;\n      if (event.dataTransfer && event.dataTransfer.files) {\n\n        // tslint:disable-next-line\n        for (let file of event.dataTransfer.files) {\n          const res = file;\n\n          if (this.imgDropTypes.includes(file.type)) {\n            const fr = new FileReader();\n            fr.onload = (e: any) => {\n              res.src = e.target.result;\n              res.urlStyle = this.domSanitizer.bypassSecurityTrustStyle(`url(${res.src})`);\n              this.cd.detectChanges();\n            };\n\n            fr.readAsDataURL(file);\n          }\n          this.droppedFiles.push(res);\n        }\n      }\n    }\n  }\n\n  removeFile(file) {\n    const index = this.droppedFiles.indexOf(file);\n    if (index >= 0) {\n      this.droppedFiles.splice(index, 1);\n    }\n  }\n\n  @HostListener('dragover')\n  onDragOver() {\n    if (this.dropFiles) {\n      this.fileOver = true;\n    }\n  }\n\n  @HostListener('dragleave')\n  onDragLeave() {\n    if (this.dropFiles) {\n      this.fileOver = false;\n    }\n  }\n\n  sendMessage() {\n    if (this.droppedFiles.length || String(this.message).trim().length) {\n      this.send.emit({ message: this.message, files: this.droppedFiles });\n      this.message = '';\n      this.droppedFiles = [];\n    }\n  }\n}\n"]}