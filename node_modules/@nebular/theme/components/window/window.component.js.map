{"version":3,"file":"window.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/window/window.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  HostBinding,\n  Inject,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  Renderer2,\n  ViewChild, AfterViewInit, Type, ComponentFactoryResolver, Input,\n} from '@angular/core';\nimport {\n  NbComponentPortal,\n  NbFocusTrap,\n  NbFocusTrapFactoryService,\n  NbOverlayContainerComponent,\n  NbTemplatePortal,\n} from '../cdk';\nimport { NbComponentType } from '../cdk/overlay';\nimport { NB_WINDOW_CONTENT, NbWindowConfig, NbWindowState, NB_WINDOW_CONTEXT } from './window.options';\nimport { NbWindowRef } from './window-ref';\n\n@Component({\n  selector: 'nb-window',\n  template: `\n    <nb-card>\n      <nb-card-header>\n        <div cdkFocusInitial class=\"title\" tabindex=\"-1\">{{ config.title }}</div>\n\n        <div class=\"buttons\">\n          <button class=\"button\" (click)=\"minimize()\">\n            <i class=\"nb-fold\"></i>\n          </button>\n          <button class=\"button\" *ngIf=\"isFullScreen\" (click)=\"maximize()\">\n            <i class=\"nb-minimize\"></i>\n          </button>\n          <button class=\"button\" *ngIf=\"minimized || maximized\" (click)=\"maximizeOrFullScreen()\">\n            <i class=\"nb-maximize\"></i>\n          </button>\n          <button class=\"button\" (click)=\"close()\">\n            <i class=\"nb-close\"></i>\n          </button>\n        </div>\n      </nb-card-header>\n      <nb-card-body *ngIf=\"maximized || isFullScreen\">\n        <nb-overlay-container></nb-overlay-container>\n      </nb-card-body>\n    </nb-card>\n  `,\n  styleUrls: ['./window.component.css'],\n})\nexport class NbWindowComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() cfr: ComponentFactoryResolver;\n\n  @HostBinding('class.full-screen')\n  get isFullScreen() {\n    return this.windowRef.state === NbWindowState.FULL_SCREEN;\n  }\n\n  @HostBinding('class.maximized')\n  get maximized() {\n    return this.windowRef.state === NbWindowState.MAXIMIZED;\n  }\n\n  @HostBinding('class.minimized')\n  get minimized() {\n    return this.windowRef.state === NbWindowState.MINIMIZED;\n  }\n\n  @ViewChild(NbOverlayContainerComponent) overlayContainer: NbOverlayContainerComponent;\n\n  protected focusTrap: NbFocusTrap;\n\n  constructor(\n    @Inject(NB_WINDOW_CONTENT) public content: TemplateRef<any> | NbComponentType,\n    @Inject(NB_WINDOW_CONTEXT) public context: Object,\n    public windowRef: NbWindowRef,\n    public config: NbWindowConfig,\n    protected focusTrapFactory: NbFocusTrapFactoryService,\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2,\n  ) {}\n\n  ngOnInit() {\n    this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\n    this.focusTrap.blurPreviouslyFocusedElement();\n    this.focusTrap.focusInitialElement();\n\n    if (this.config.windowClass) {\n      this.renderer.addClass(this.elementRef.nativeElement, this.config.windowClass);\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.content instanceof TemplateRef) {\n      this.attachTemplate();\n    } else {\n      this.attachComponent();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.focusTrap) {\n      this.focusTrap.restoreFocus();\n    }\n\n    this.close();\n  }\n\n  minimize() {\n    if (this.windowRef.state === NbWindowState.MINIMIZED) {\n      this.windowRef.toPreviousState();\n    } else {\n      this.windowRef.minimize();\n    }\n  }\n\n  maximize() {\n    this.windowRef.maximize();\n  }\n\n  fullScreen() {\n    this.windowRef.fullScreen();\n  }\n\n  maximizeOrFullScreen() {\n    if (this.windowRef.state === NbWindowState.MINIMIZED) {\n      this.maximize();\n    } else {\n      this.fullScreen();\n    }\n  }\n\n  close() {\n    this.windowRef.close();\n  }\n\n  protected attachTemplate() {\n    this.overlayContainer.attachTemplatePortal(new NbTemplatePortal(this.content as TemplateRef<any>, null, {\n      $implicit: this.context,\n    }));\n  }\n\n  protected attachComponent() {\n    const portal = new NbComponentPortal(this.content as Type<any>, null, null, this.cfr);\n    const ref = this.overlayContainer.attachComponentPortal(portal);\n    Object.assign(ref.instance, this.context);\n    ref.changeDetectorRef.detectChanges();\n  }\n}\n"]}