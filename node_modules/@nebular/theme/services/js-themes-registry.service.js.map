{"version":3,"file":"js-themes-registry.service.js","sourceRoot":"","sources":["../../../../.ng_build/theme/services/js-themes-registry.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Inject, Injectable } from '@angular/core';\n\n\nimport { NbJSThemeOptions } from './js-themes/theme.options';\nimport { DEFAULT_THEME } from './js-themes/default.theme';\nimport { COSMIC_THEME } from './js-themes/cosmic.theme';\nimport { CORPORATE_THEME } from './js-themes/corporate.theme';\nimport { NB_BUILT_IN_JS_THEMES, NB_JS_THEMES } from '../theme.options';\n\nexport const BUILT_IN_THEMES: NbJSThemeOptions[] = [\n  DEFAULT_THEME,\n  COSMIC_THEME,\n  CORPORATE_THEME,\n];\n\n/**\n * Js Themes registry - provides access to the JS themes' variables.\n * Usually shouldn't be used directly, but through the NbThemeService class methods (getJsTheme).\n */\n@Injectable()\nexport class NbJSThemesRegistry {\n\n  private themes: any = {};\n\n  constructor(@Inject(NB_BUILT_IN_JS_THEMES) builtInThemes: NbJSThemeOptions[],\n              @Inject(NB_JS_THEMES) newThemes: NbJSThemeOptions[] = []) {\n\n    const themes = this.combineByNames(newThemes, builtInThemes);\n\n    themes.forEach((theme: any) => {\n      this.register(theme, theme.name, theme.base);\n    });\n  }\n\n  /**\n   * Registers a new JS theme\n   * @param config any\n   * @param themeName string\n   * @param baseTheme string\n   */\n  register(config: any, themeName: string, baseTheme: string) {\n    const base = this.has(baseTheme) ? this.get(baseTheme) : {};\n    this.themes[themeName] = this.mergeDeep({}, base, config);\n  }\n\n  /**\n   * Checks whether the theme is registered\n   * @param themeName\n   * @returns boolean\n   */\n  has(themeName: string): boolean {\n    return !!this.themes[themeName];\n  }\n\n  /**\n   * Return a theme\n   * @param themeName\n   * @returns NbJSThemeOptions\n   */\n  get(themeName: string): NbJSThemeOptions {\n    if (!this.themes[themeName]) {\n      throw Error(`NbThemeConfig: no theme '${themeName}' found registered.`);\n    }\n    return JSON.parse(JSON.stringify(this.themes[themeName]));\n  }\n\n  private combineByNames(newThemes: NbJSThemeOptions[], oldThemes: NbJSThemeOptions[]): NbJSThemeOptions[] {\n    if (newThemes) {\n      const mergedThemes: NbJSThemeOptions[] = [];\n      newThemes.forEach((theme: NbJSThemeOptions) => {\n        const sameOld: NbJSThemeOptions = oldThemes.find((tm: NbJSThemeOptions) => tm.name === theme.name)\n          || <NbJSThemeOptions>{};\n\n        const mergedTheme = this.mergeDeep({}, sameOld, theme);\n        mergedThemes.push(mergedTheme);\n      });\n\n      oldThemes.forEach((theme: NbJSThemeOptions) => {\n        if (!mergedThemes.find((tm: NbJSThemeOptions) => tm.name === theme.name)) {\n          mergedThemes.push(theme);\n        }\n      });\n      return mergedThemes;\n    }\n    return oldThemes;\n  }\n\n\n  private isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n  }\n\n  // TODO: move to helpers\n  private mergeDeep(target, ...sources) {\n    if (!sources.length) {\n      return target;\n    }\n    const source = sources.shift();\n\n    if (this.isObject(target) && this.isObject(source)) {\n      for (const key in source) {\n        if (this.isObject(source[key])) {\n          if (!target[key]) {\n            Object.assign(target, { [key]: {} });\n          }\n          this.mergeDeep(target[key], source[key]);\n        } else {\n          Object.assign(target, { [key]: source[key] });\n        }\n      }\n    }\n    return this.mergeDeep(target, ...sources);\n  }\n}\n"]}