{"version":3,"file":"oauth2-strategy.js","sourceRoot":"","sources":["../../../../../.ng_build/auth/strategies/oauth2/oauth2-strategy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { NB_WINDOW } from '@nebular/theme';\n\nimport { NbAuthStrategy } from '../auth-strategy';\nimport {\n  NbAuthIllegalTokenError,\n  NbAuthRefreshableToken,\n  NbAuthResult,\n  NbAuthToken,\n} from '../../services/';\nimport {\n  NbOAuth2AuthStrategyOptions,\n  NbOAuth2ResponseType,\n  auth2StrategyOptions,\n  NbOAuth2GrantType, NbOAuth2ClientAuthMethod,\n} from './oauth2-strategy.options';\nimport { NbAuthStrategyClass } from '../../auth.options';\n\n\n/**\n * OAuth2 authentication strategy.\n *\n * Strategy settings:\n *\n * ```ts\n * export enum NbOAuth2ResponseType {\n *   CODE = 'code',\n *   TOKEN = 'token',\n * }\n *\n * export enum NbOAuth2GrantType {\n *   AUTHORIZATION_CODE = 'authorization_code',\n *   PASSWORD = 'password',\n *   REFRESH_TOKEN = 'refresh_token',\n * }\n *\n * export class NbOAuth2AuthStrategyOptions {\n *   name: string;\n *   baseEndpoint?: string = '';\n *   clientId: string = '';\n *   clientSecret: string = '';\n *   clientAuthMethod: string = NbOAuth2ClientAuthMethod.NONE;\n *   redirect?: { success?: string; failure?: string } = {\n *     success: '/',\n *     failure: null,\n *   };\n *   defaultErrors?: any[] = ['Something went wrong, please try again.'];\n *   defaultMessages?: any[] = ['You have been successfully authenticated.'];\n *   authorize?: {\n *     endpoint?: string;\n *     redirectUri?: string;\n *     responseType?: string;\n *     requireValidToken: false,\n *     scope?: string;\n *     state?: string;\n *     params?: { [key: string]: string };\n *   } = {\n *     endpoint: 'authorize',\n *     responseType: NbOAuth2ResponseType.CODE,\n *   };\n *   token?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     requireValidToken: false,\n *     redirectUri?: string;\n *     scope?: string;\n *     class: NbAuthTokenClass,\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n *     class: NbAuthOAuth2Token,\n *   };\n *   refresh?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     scope?: string;\n *     requireValidToken: false,\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n *   };\n * }\n * ```\n *\n */\n@Injectable()\nexport class NbOAuth2AuthStrategy extends NbAuthStrategy {\n\n  static setup(options: NbOAuth2AuthStrategyOptions): [NbAuthStrategyClass, NbOAuth2AuthStrategyOptions] {\n    return [NbOAuth2AuthStrategy, options];\n  }\n\n  get responseType() {\n    return this.getOption('authorize.responseType');\n  }\n\n  get clientAuthMethod() {\n    return this.getOption('clientAuthMethod');\n  }\n\n  protected redirectResultHandlers = {\n    [NbOAuth2ResponseType.CODE]: () => {\n      return observableOf(this.route.snapshot.queryParams).pipe(\n        switchMap((params: any) => {\n          if (params.code) {\n            return this.requestToken(params.code)\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              params,\n              this.getOption('redirect.failure'),\n              this.getOption('defaultErrors'),\n              [],\n            ));\n        }),\n      );\n    },\n    [NbOAuth2ResponseType.TOKEN]: () => {\n      const module = 'authorize';\n      const requireValidToken = this.getOption(`${module}.requireValidToken`);\n      return observableOf(this.route.snapshot.fragment).pipe(\n        map(fragment => this.parseHashAsQueryParams(fragment)),\n        map((params: any) => {\n          if (!params.error) {\n            return new NbAuthResult(\n              true,\n              params,\n              this.getOption('redirect.success'),\n              [],\n              this.getOption('defaultMessages'),\n              this.createToken(params, requireValidToken));\n          }\n          return new NbAuthResult(\n            false,\n            params,\n            this.getOption('redirect.failure'),\n            this.getOption('defaultErrors'),\n            [],\n          );\n        }),\n        catchError(err => {\n          const errors = [];\n          if (err instanceof NbAuthIllegalTokenError) {\n            errors.push(err.message)\n          } else {\n            errors.push('Something went wrong.');\n          }\n          return observableOf(\n            new NbAuthResult(\n              false,\n              err,\n              this.getOption('redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n    },\n  };\n\n  protected redirectResults = {\n    [NbOAuth2ResponseType.CODE]: () => {\n      return observableOf(this.route.snapshot.queryParams).pipe(\n        map((params: any) => !!(params && (params.code || params.error))),\n      );\n    },\n    [NbOAuth2ResponseType.TOKEN]: () => {\n      return observableOf(this.route.snapshot.fragment).pipe(\n        map(fragment => this.parseHashAsQueryParams(fragment)),\n        map((params: any) => !!(params && (params.access_token || params.error))),\n      );\n    },\n  };\n\n  protected defaultOptions: NbOAuth2AuthStrategyOptions = auth2StrategyOptions;\n\n  constructor(protected http: HttpClient,\n              private route: ActivatedRoute,\n              @Inject(NB_WINDOW) private window: any) {\n    super();\n  }\n\n  authenticate(data?: any): Observable<NbAuthResult> {\n\n    if (this.getOption('token.grantType') === NbOAuth2GrantType.PASSWORD) {\n      return this.passwordToken(data.email, data.password)\n    } else {\n      return this.isRedirectResult()\n        .pipe(\n          switchMap((result: boolean) => {\n            if (!result) {\n              this.authorizeRedirect();\n              return observableOf(new NbAuthResult(true));\n            }\n            return this.getAuthorizationResult();\n          }),\n        );\n    }\n  }\n\n  getAuthorizationResult(): Observable<any> {\n    const redirectResultHandler = this.redirectResultHandlers[this.responseType];\n    if (redirectResultHandler) {\n      return redirectResultHandler.call(this);\n    }\n\n    throw new Error(`'${this.responseType}' responseType is not supported,\n                      only 'token' and 'code' are supported now`);\n  }\n\n  refreshToken(token: NbAuthRefreshableToken): Observable<NbAuthResult> {\n    const module = 'refresh';\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n\n    return this.http.post(url, this.buildRefreshRequestData(token), this.buildAuthHeader())\n      .pipe(\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption('redirect.success'),\n            [],\n            this.getOption('defaultMessages'),\n            this.createRefreshedToken(res, token, requireValidToken));\n        }),\n        catchError((res) => this.handleResponseError(res)),\n      );\n  }\n\n  passwordToken(username: string, password: string): Observable<NbAuthResult> {\n    const module = 'token';\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n\n    return this.http.post(url, this.buildPasswordRequestData(username, password), this.buildAuthHeader() )\n      .pipe(\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption('redirect.success'),\n            [],\n            this.getOption('defaultMessages'),\n            this.createToken(res, requireValidToken));\n        }),\n        catchError((res) => this.handleResponseError(res)),\n      );\n  }\n\n  protected authorizeRedirect() {\n    this.window.location.href = this.buildRedirectUrl();\n  }\n\n  protected isRedirectResult(): Observable<boolean> {\n    return this.redirectResults[this.responseType].call(this);\n  }\n\n  protected requestToken(code: string) {\n\n    const module = 'token';\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n\n    return this.http.post(url, this.buildCodeRequestData(code),\n                         this.buildAuthHeader())\n      .pipe(\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption('redirect.success'),\n            [],\n            this.getOption('defaultMessages'),\n            this.createToken(res, requireValidToken));\n        }),\n        catchError((res) => this.handleResponseError(res)),\n      );\n  }\n\n  protected buildCodeRequestData(code: string): any {\n    const params = {\n      grant_type: this.getOption('token.grantType'),\n      code: code,\n      redirect_uri: this.getOption('token.redirectUri'),\n      client_id: this.getOption('clientId'),\n    };\n    return this.cleanParams(this.addCredentialsToParams(params));\n  }\n\n  protected buildRefreshRequestData(token: NbAuthRefreshableToken): any {\n    const params = {\n      grant_type: this.getOption('refresh.grantType'),\n      refresh_token: token.getRefreshToken(),\n      scope: this.getOption('refresh.scope'),\n    };\n    return this.cleanParams(this.addCredentialsToParams(params));\n  }\n\n  protected buildPasswordRequestData(username: string, password: string ): any {\n    const params = {\n      grant_type: this.getOption('token.grantType'),\n      username: username,\n      password: password,\n      scope: this.getOption('token.scope'),\n    };\n    return this.cleanParams(this.addCredentialsToParams(params));\n  }\n\n  protected buildAuthHeader(): any {\n    if (this.clientAuthMethod === NbOAuth2ClientAuthMethod.BASIC) {\n      if (this.getOption('clientId') && this.getOption('clientSecret')) {\n        return {\n          headers: new HttpHeaders(\n            {\n              'Authorization': 'Basic ' + btoa(\n                this.getOption('clientId') + ':' + this.getOption('clientSecret')),\n            },\n          ),\n        };\n      } else {\n        throw Error('For basic client authentication method, please provide both clientId & clientSecret.');\n      }\n    }\n  }\n\n  protected cleanParams(params: any): any {\n    Object.entries(params)\n      .forEach(([key, val]) => !val && delete params[key]);\n    return params;\n  }\n\n  protected addCredentialsToParams(params: any): any {\n    if (this.clientAuthMethod === NbOAuth2ClientAuthMethod.REQUEST_BODY) {\n      if (this.getOption('clientId') && this.getOption('clientSecret')) {\n        return {\n          ... params,\n          client_id: this.getOption('clientId'),\n          client_secret: this.getOption('clientSecret'),\n        }\n      } else {\n        throw Error('For request body client authentication method, please provide both clientId & clientSecret.')\n      }\n    }\n    return params;\n  }\n\n\n  protected handleResponseError(res: any): Observable<NbAuthResult> {\n    let errors = [];\n    if (res instanceof HttpErrorResponse) {\n      if (res.error.error_description) {\n        errors.push(res.error.error_description);\n      } else {\n        errors = this.getOption('defaultErrors');\n      }\n    }  else if (res instanceof NbAuthIllegalTokenError ) {\n      errors.push(res.message)\n    } else {\n        errors.push('Something went wrong.')\n    };\n\n    return observableOf(\n      new NbAuthResult(\n        false,\n        res,\n        this.getOption('redirect.failure'),\n        errors,\n        [],\n      ));\n  }\n\n  protected buildRedirectUrl() {\n    const params = {\n      response_type: this.getOption('authorize.responseType'),\n      client_id: this.getOption('clientId'),\n      redirect_uri: this.getOption('authorize.redirectUri'),\n      scope: this.getOption('authorize.scope'),\n      state: this.getOption('authorize.state'),\n\n      ...this.getOption('authorize.params'),\n    };\n\n    const endpoint = this.getActionEndpoint('authorize');\n    const query = Object.entries(params)\n      .filter(([key, val]) => !!val)\n      .map(([key, val]: [string, string]) => `${key}=${encodeURIComponent(val)}`)\n      .join('&');\n\n    return `${endpoint}?${query}`;\n  }\n\n  protected parseHashAsQueryParams(hash: string): { [key: string]: string } {\n    return hash ? hash.split('&').reduce((acc: any, part: string) => {\n      const item = part.split('=');\n      acc[item[0]] = decodeURIComponent(item[1]);\n      return acc;\n    }, {}) : {};\n  }\n\n  protected createRefreshedToken(res, existingToken: NbAuthRefreshableToken, requireValidToken: boolean): NbAuthToken {\n    type AuthRefreshToken = NbAuthRefreshableToken & NbAuthToken;\n\n    const refreshedToken: AuthRefreshToken = this.createToken<AuthRefreshToken>(res, requireValidToken);\n    if (!refreshedToken.getRefreshToken() && existingToken.getRefreshToken()) {\n      refreshedToken.setRefreshToken(existingToken.getRefreshToken());\n    }\n    return refreshedToken;\n  }\n\n  register(data?: any): Observable<NbAuthResult> {\n    throw new Error('`register` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n  }\n\n  requestPassword(data?: any): Observable<NbAuthResult> {\n    throw new Error('`requestPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n  }\n\n  resetPassword(data: any = {}): Observable<NbAuthResult> {\n    throw new Error('`resetPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n  }\n\n  logout(): Observable<NbAuthResult> {\n    return observableOf(new NbAuthResult(true));\n  }\n}\n"]}