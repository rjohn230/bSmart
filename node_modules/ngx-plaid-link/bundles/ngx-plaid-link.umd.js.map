{"version":3,"file":"ngx-plaid-link.umd.js.map","sources":["ng://ngx-plaid-link/lib/ngx-plaid-link-handler.ts","ng://ngx-plaid-link/lib/ngx-plaid-link.service.ts","ng://ngx-plaid-link/lib/ngx-plaid-link-button.component.ts","ng://ngx-plaid-link/lib/ngx-plaid-link.module.ts"],"sourcesContent":["import { PlaidConfig } from './interfaces';\n\ndeclare let Plaid: any;\n\nexport class PlaidLinkHandler {\n\n  /**\n   * Holds the Plaid Link instance.\n   */\n  private plaidLink: any;\n\n  /**\n   * Constructor configures the Plaid Link handler with given config options.\n   * @param PlaidConfig config\n   */\n  constructor(config: PlaidConfig) {\n    this.plaidLink = Plaid.create(config);\n  }\n\n  /**\n   * Open the Plaid Link window for this handler.\n   * @param string institution The name of the institution to open\n   */\n  public open(institution?: string): void {\n    this.plaidLink.open(institution);\n  }\n\n  /**\n   * Closes the currently open Plaid Link window if any.\n   */\n  public exit(): void {\n    this.plaidLink.exit();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PlaidConfig } from './interfaces';\nimport { PlaidLinkHandler } from './ngx-plaid-link-handler';\n\n@Injectable()\nexport class NgxPlaidLinkService {\n\n  private loaded: Promise<void>;\n\n  constructor() { }\n\n  /**\n   * Create a Plaid Link instance as soon as Plaid Link has loaded.\n   * @param PlaidConfig config\n   * @returns Promise<PlaidLinkHandler>\n   */\n  public createPlaid(config: PlaidConfig): Promise<PlaidLinkHandler> {\n    return this.loadPlaid().then(() => {\n      return new PlaidLinkHandler(config);\n    });\n  }\n\n  /**\n   * Load or wait for the Plaid Link library to load.\n   * @returns Promise<void>\n   */\n  public loadPlaid(): Promise<void> {\n    if (!this.loaded) {\n      this.loaded = new Promise<void>((resolve, reject) => {\n        const script: any = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = 'https://cdn.plaid.com/link/v2/stable/link-initialize.js';\n        script.onerror = (e: any) => reject(e);\n        if (script.readyState) {\n          script.onreadystatechange = () => {\n            if (script.readyState === 'loaded' || script.readyState === 'complete') {\n              script.onreadystatechange = null;\n              resolve();\n            }\n          };\n        } else {\n          script.onload = () => {\n            resolve();\n          };\n        }\n        document.getElementsByTagName('body')[0].appendChild(script);\n      });\n    }\n\n    return this.loaded;\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\nimport {\n  PlaidErrorMetadata,\n  PlaidErrorObject,\n  PlaidEventMetadata,\n  PlaidOnEventArgs,\n  PlaidOnExitArgs,\n  PlaidOnSuccessArgs,\n  PlaidSuccessMetadata,\n  PlaidConfig\n} from './interfaces';\nimport { NgxPlaidLinkService } from './ngx-plaid-link.service';\nimport { PlaidLinkHandler } from './ngx-plaid-link-handler';\n\nexport interface ICustomWindow extends Window {\n  Plaid: {\n    create: Function;\n  };\n}\n\nfunction getWindow(): any {\n  return window;\n}\n\n@Component({\n  selector: 'mr-ngx-plaid-link-button',\n  template: `\n    <button\n      (click)=\"onClick($event)\"\n      [class]=\"className\"\n      [disabled]=\"disabledButton\"\n      [ngStyle]=\"style\">\n      {{buttonText}}\n    </button>\n  `,\n  styles: []\n})\nexport class NgxPlaidLinkButtonComponent implements AfterViewInit {\n\n  private plaidLinkHandler: PlaidLinkHandler;\n\n  private defaultProps = {\n    apiVersion: 'v2',\n    env: 'sandbox',\n    institution: null,\n    token: null,\n    style: {\n      'background-color': '#0085e4',\n      'transition-duration': '350ms',\n      'transition-property': 'background-color, box-shadow',\n      'transition-timing-function': 'ease-in-out',\n      '-webkit-appearance': 'button',\n      'border': '0',\n      'border-radius': '4px',\n      'box-shadow': '0 2px 4px 0 rgba(0,0,0,0.1), inset 0 1px 0 0 rgba(255,255,255,0.1)',\n      'color': '#fff',\n      'font-size': '20px',\n      'height': '56px',\n      'outline': '0',\n      'text-align': 'center',\n      'text-transform': 'none',\n      'padding': '0 2em',\n      'cursor': 'pointer'\n    },\n    buttonText: 'Log In To Your Bank Account',\n    webhook: '',\n    product: ['auth'],\n    className: 'plaid-link-button'\n  };\n\n  disabledButton: boolean;\n\n  @Input() apiVersion?: string = this.defaultProps.apiVersion;\n  @Input() clientName: string;\n  @Input() env?: string = this.defaultProps.env;\n  @Input() institution?: string = this.defaultProps.institution;\n  @Input() publicKey: string;\n  @Input() product?: Array<string> = this.defaultProps.product;\n  @Input() token?: string = this.defaultProps.token;\n  @Input() webhook?: string = this.defaultProps.webhook;\n  @Input() style?: any = this.defaultProps.style;\n  @Input() className?: string = this.defaultProps.className;\n  @Input() buttonText?: string = this.defaultProps.buttonText;\n\n  @Output() Event: EventEmitter<PlaidOnEventArgs> = new EventEmitter();\n  @Output() Click: EventEmitter<any> = new EventEmitter();\n  @Output() Load: EventEmitter<any> = new EventEmitter();\n  @Output() Exit: EventEmitter<PlaidOnExitArgs> = new EventEmitter();\n  @Output() Success: EventEmitter<PlaidOnSuccessArgs> = new EventEmitter();\n\n  get nativeWindow(): ICustomWindow {\n    return getWindow();\n  }\n\n  constructor(private plaidLinkLoader: NgxPlaidLinkService) {\n    this.disabledButton = true;\n  }\n\n  ngAfterViewInit() {\n    const self = this;\n    this.plaidLinkLoader.createPlaid({\n      env: self.env,\n      key: self.publicKey,\n      product: self.product,\n      apiVersion: 'v2',\n      clientName: self.clientName,\n      onSuccess: function (public_token, metadata) {\n        self.onSuccess(public_token, metadata);\n      },\n      onExit: function (err, metadata) {\n        self.onExit(err, metadata);\n      },\n      onEvent: function (eventName, metadata) {\n        self.onEvent(eventName, metadata);\n      },\n      onLoad: function () {\n        self.onLoad();\n      },\n      token: self.token || null,\n      webhook: self.webhook || null\n    }).then((handler: PlaidLinkHandler) => {\n      this.disabledButton = false;\n      this.plaidLinkHandler = handler;\n    });\n  }\n\n  onScriptError() {\n    console.error('There was an issue loading the link-initialize.js script');\n  }\n\n  public onExit(error: PlaidErrorObject, metadata: PlaidErrorMetadata) {\n    this.Exit.emit({\n      error: error,\n      metadata: metadata\n    });\n  }\n\n  public onEvent(eventName: string, metadata: PlaidEventMetadata) {\n    this.Event.emit({\n      eventName: eventName,\n      metadata: metadata\n    });\n  }\n\n  public onSuccess(public_token: string, metadata: PlaidSuccessMetadata) {\n    this.Success.emit({\n      token: public_token,\n      metadata: metadata\n    });\n  }\n\n  onClick($event) {\n    this.Click.emit($event);\n    // Open to a specific institution if necessary;\n    const institution = this.institution || null;\n    if (this.plaidLinkHandler) {\n      this.plaidLinkHandler.open(institution);\n    }\n  }\n\n  public onLoad($event = 'link_loaded') {\n    this.Load.emit($event);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxPlaidLinkButtonComponent } from './ngx-plaid-link-button.component';\nimport { NgxPlaidLinkService } from './ngx-plaid-link.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    NgxPlaidLinkService\n  ],\n  declarations: [NgxPlaidLinkButtonComponent],\n  exports: [NgxPlaidLinkButtonComponent]\n})\nexport class NgxPlaidLinkModule { }\n"],"names":["Injectable","EventEmitter","Component","Input","Output","NgModule","CommonModule"],"mappings":"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"}
